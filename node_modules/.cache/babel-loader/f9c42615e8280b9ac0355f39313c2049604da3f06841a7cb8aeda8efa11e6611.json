{"ast":null,"code":"export default {\n  data() {\n    //변수생성\n    return {\n      requestBody: this.$route.query,\n      idx: this.$route.query.idx,\n      user_name: '',\n      user_id: '',\n      user_pw: '',\n      check: false\n    };\n  },\n  mounted() {},\n  methods: {\n    fnSign() {\n      let apiUrl = this.$serverUrl + '/board';\n      this.form = {\n        \"idx\": this.idx,\n        \"title\": this.title,\n        \"contents\": this.contents,\n        \"author\": this.author\n      };\n      if (this.user_name === '') {\n        alert('이름을 입력하세요.');\n        return;\n      }\n      if (this.user_id === '') {\n        alert('ID를 입력하세요.');\n        return;\n      }\n      if (this.user_pw === '') {\n        alert('비밀번호를 입력하세요.');\n        return;\n      }\n      if (!this.check) {\n        alert('약관에 동의해주세요');\n        return;\n      }\n      //INSERT\n      this.$axios.post(apiUrl, this.form).then(res => {\n        alert('글이 저장되었습니다.');\n        this.fnView(res.data.idx);\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","requestBody","$route","query","idx","user_name","user_id","user_pw","check","mounted","methods","fnSign","apiUrl","$serverUrl","form","title","contents","author","alert","$axios","post","then","res","fnView","catch","err","message","indexOf"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\common\\PageSighUp.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <h2>Please Sign Up</h2>\r\n      <div id=\"loginForm\">\r\n        <form @submit.prevent=\"fnSign\">\r\n          <p>\r\n            <input class=\"w3-input\" name=\"uid\" placeholder=\"Enter your Name\" v-model=\"user_name\"><br>\r\n          </p>\r\n          <p>\r\n            <input class=\"w3-input\" name=\"uid\" placeholder=\"Enter your ID\" v-model=\"user_id\"><br>\r\n          </p>\r\n          <p>\r\n            <input name=\"password\" class=\"w3-input\" placeholder=\"Enter your password\" v-model=\"user_pw\" type=\"password\">\r\n          </p>\r\n          <div>\r\n            <input type=\"checkbox\" v-model=\"check\"><b><a href=\"http://10.1.10.226:8080/about\" style=\"vertical-align: middle;\">About</a></b><span style=\"vertical-align: middle;\">의 내용을 읽고 이용약관에 동의합니다.</span>\r\n          </div>\r\n          <p>\r\n            <button type=\"submit\" class=\"w3-button w3-green w3-round\">Sign-Up</button>\r\n          </p>\r\n          <p><b><router-link to=\"/login\" style=\"color: #42b983\">이미 계정이 있으신가요?</router-link></b></p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: this.$route.query,\r\n      idx: this.$route.query.idx,\r\n\r\n      user_name: '',\r\n      user_id: '',\r\n      user_pw: '',\r\n      check: false\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    fnSign() {\r\n      let apiUrl = this.$serverUrl + '/board'\r\n      this.form = {\r\n        \"idx\": this.idx,\r\n        \"title\": this.title,\r\n        \"contents\": this.contents,\r\n        \"author\": this.author\r\n      }\r\n\r\n      if(this.user_name === '') {\r\n        alert('이름을 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if (this.user_id === '') {\r\n        alert('ID를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if (this.user_pw === '') {\r\n        alert('비밀번호를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if(!this.check) {\r\n        alert('약관에 동의해주세요')\r\n        return\r\n      }\r\n        //INSERT\r\n        this.$axios.post(apiUrl, this.form)\r\n            .then((res) => {\r\n              alert('글이 저장되었습니다.')\r\n              this.fnView(res.data.idx)\r\n            }).catch((err) => {\r\n          if (err.message.indexOf('Network Error') > -1) {\r\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n          }\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#loginForm {\r\n  width: 500px;\r\n  margin: auto;\r\n}\r\ninput[type=\"checkbox\"] {\r\n  vertical-align: middle;\r\n  margin-right: 10px;\r\n}\r\n</style>"],"mappings":"AA6BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IAAE;IACP,OAAO;MACLC,WAAW,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK;MAC9BC,GAAG,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,GAAG;MAE1BC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG,CACV,CAAC;EACDC,OAAO,EAAE;IACPC,MAAMA,CAAA,EAAG;MACP,IAAIC,MAAK,GAAI,IAAI,CAACC,UAAS,GAAI,QAAO;MACtC,IAAI,CAACC,IAAG,GAAI;QACV,KAAK,EAAE,IAAI,CAACV,GAAG;QACf,OAAO,EAAE,IAAI,CAACW,KAAK;QACnB,UAAU,EAAE,IAAI,CAACC,QAAQ;QACzB,QAAQ,EAAE,IAAI,CAACC;MACjB;MAEA,IAAG,IAAI,CAACZ,SAAQ,KAAM,EAAE,EAAE;QACxBa,KAAK,CAAC,YAAY;QAClB;MACF;MAEA,IAAI,IAAI,CAACZ,OAAM,KAAM,EAAE,EAAE;QACvBY,KAAK,CAAC,YAAY;QAClB;MACF;MAEA,IAAI,IAAI,CAACX,OAAM,KAAM,EAAE,EAAE;QACvBW,KAAK,CAAC,cAAc;QACpB;MACF;MAEA,IAAG,CAAC,IAAI,CAACV,KAAK,EAAE;QACdU,KAAK,CAAC,YAAY;QAClB;MACF;MACE;MACA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACR,MAAM,EAAE,IAAI,CAACE,IAAI,EAC7BO,IAAI,CAAEC,GAAG,IAAK;QACbJ,KAAK,CAAC,aAAa;QACnB,IAAI,CAACK,MAAM,CAACD,GAAG,CAACtB,IAAI,CAACI,GAAG;MAC1B,CAAC,CAAC,CAACoB,KAAK,CAAEC,GAAG,IAAK;QACpB,IAAIA,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE;UAC7CT,KAAK,CAAC,mCAAmC;QAC3C;MACF,CAAC;IACL;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}