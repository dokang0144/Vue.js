{"ast":null,"code":"export default {\n  data() {\n    return {\n      idx: this.$route.query.idx,\n      comments: [],\n      newComment: \"\" //새로운 댓글을 저장할 변수\n    };\n  },\n\n  mounted() {\n    this.fnGetList();\n  },\n  methods: {\n    fnGetList() {\n      this.$nextTick(() => {\n        this.$axios.get(this.$serverUrl + \"/comment/\" + this.idx, {\n          headers: {}\n        }).then(res => {\n          this.comments = res.data;\n        });\n      });\n    },\n    fnWrite() {\n      let apiUrl = this.$serverUrl + '/comment';\n      this.$axios.post(apiUrl, this.form).then(res => {\n        alert('글이 저장되었습니다.');\n        this.fnView(res.data.idx);\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","idx","$route","query","comments","newComment","mounted","fnGetList","methods","$nextTick","$axios","get","$serverUrl","headers","then","res","fnWrite","apiUrl","post","form","alert","fnView","catch","err","message","indexOf"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardComment.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-list\">\r\n    <div style=\"border-bottom: 2px solid #92D050; height: 50px;\">\r\n      <p style=\"float:left; padding: 0 10px 0\">전체 댓글 <a style=\"color: dodgerblue;\">{{ this.comments.length }}</a>개</p>\r\n    </div>\r\n\r\n    <ul class=\"w3-ul\">\r\n      <li v-for=\"(comment, index) in comments\" :key=\"index\" style=\"border-bottom: 1px solid #D9D9D9\">\r\n        <div style=\"float: left; width: 150px;\">{{ comments.user_name }}</div>\r\n        <div>{{ comments.com }}</div>\r\n      </li>\r\n    </ul><br>\r\n    <div style=\"text-align: center; border: solid 2px #E9E5E1; width: 700px; padding: 10px; margin: auto\">\r\n      <input type=\"text\" style=\"width: 550px; height: 40px; outline: none; border: 0 solid black\" placeholder=\"댓글을 남겨주세요.\">&nbsp;\r\n      <button type=\"button\" class=\"w3-button w3-green\" v-on:click=\"fnWrite\" style=\"height: 40px\">댓글쓰기</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      idx: this.$route.query.idx,\r\n      comments: [],\r\n      newComment: \"\" //새로운 댓글을 저장할 변수\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetList()\r\n  },\r\n  methods: {\r\n    fnGetList() {\r\n      this.$nextTick(() => {\r\n        this.$axios.get(this.$serverUrl + \"/comment/\" + this.idx, {\r\n          headers: {}\r\n        }).then((res) => {\r\n          this.comments = res.data\r\n        })\r\n      })\r\n    },\r\n    fnWrite() {\r\n      let apiUrl = this.$serverUrl + '/comment'\r\n\r\n      this.$axios.post(apiUrl, this.form)\r\n          .then((res) => {\r\n            alert('글이 저장되었습니다.')\r\n            this.fnView(res.data.idx)\r\n          }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":"AAoBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,GAAG;MAC1BG,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAC,CAAE;IACjB;EACF,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,EAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV,IAAI,CAACE,SAAS,CAAC,MAAM;QACnB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,IAAI,CAACC,UAAS,GAAI,WAAU,GAAI,IAAI,CAACX,GAAG,EAAE;UACxDY,OAAO,EAAE,CAAC;QACZ,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;UACf,IAAI,CAACX,QAAO,GAAIW,GAAG,CAACf,IAAG;QACzB,CAAC;MACH,CAAC;IACH,CAAC;IACDgB,OAAOA,CAAA,EAAG;MACR,IAAIC,MAAK,GAAI,IAAI,CAACL,UAAS,GAAI,UAAS;MAExC,IAAI,CAACF,MAAM,CAACQ,IAAI,CAACD,MAAM,EAAE,IAAI,CAACE,IAAI,EAC7BL,IAAI,CAAEC,GAAG,IAAK;QACbK,KAAK,CAAC,aAAa;QACnB,IAAI,CAACC,MAAM,CAACN,GAAG,CAACf,IAAI,CAACC,GAAG;MAC1B,CAAC,CAAC,CAACqB,KAAK,CAAEC,GAAG,IAAK;QACpB,IAAIA,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE;UAC7CL,KAAK,CAAC,mCAAmC;QAC3C;MACF,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}