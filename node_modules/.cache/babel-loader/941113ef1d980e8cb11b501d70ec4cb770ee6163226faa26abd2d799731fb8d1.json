{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    //변수생성\n    return {\n      requestBody: {},\n      //리스트 페이지 데이터전송\n      list: {},\n      //리스트 데이터\n      no: '' //게시판 숫자처리\n    };\n  },\n\n  mounted() {\n    this.fnGetList();\n  },\n  methods: {\n    fnGetList() {\n      this.requestBody = {\n        // 데이터 전송\n        sk: this.search_key,\n        sv: this.search_value,\n        page: this.page,\n        size: this.size\n      };\n      this.$axios.get(this.$serverUrl + \"/comment/list\", {\n        params: this.requestBody,\n        headers: {}\n      }).then(res => {\n        if (res.data.result_code === \"OK\") {\n          this.list = res.data.data;\n          this.paging = res.data.pagination;\n          this.no = this.paging.total_list_cnt - (this.paging.page - 1) * this.paging.page_size;\n        }\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    },\n    fnView(idx) {\n      this.requestBody.idx = idx;\n      this.$router.push({\n        path: './detail',\n        query: this.requestBody\n      });\n    },\n    fnWrite() {\n      this.$router.push({\n        path: './write'\n      });\n    },\n    fnPage(n) {\n      if (this.page !== n) {\n        this.page = n;\n      }\n      this.fnGetList();\n    }\n  }\n};","map":{"version":3,"names":["data","requestBody","list","no","mounted","fnGetList","methods","sk","search_key","sv","search_value","page","size","$axios","get","$serverUrl","params","headers","then","res","result_code","paging","pagination","total_list_cnt","page_size","catch","err","message","indexOf","alert","fnView","idx","$router","push","path","query","fnWrite","fnPage","n"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardComment.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-list\">\r\n    <div style=\"border-bottom: 2px solid #92D050; height: 50px;\">\r\n      <p style=\"float:left; padding: 0 10px 0\">전체 댓글 <a style=\"color: dodgerblue;\">0</a>개</p>\r\n    </div>\r\n\r\n    <ul class=\"w3-ul\" v-for=\"(row, idx) in list\" :key=\"idx\">\r\n      <li style=\"border-bottom: 1px solid #D9D9D9\"><div style=\"float: left; width: 150px;\">{{ row.user_name }}</div><div>{{ row.com }}</div></li>\r\n    </ul><br>\r\n    <div style=\"text-align: center; border: solid 2px #E9E5E1; width: 700px; padding: 10px; margin: auto\">\r\n      <input type=\"text\" style=\"width: 550px; height: 40px; outline: none; border: 0 solid black\" placeholder=\"댓글을 남겨주세요.\">&nbsp;\r\n      <button type=\"button\" class=\"w3-button w3-green\" v-on:click=\"fnWrite\" style=\"height: 40px\">댓글쓰기</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: {}, //리스트 페이지 데이터전송\r\n      list: {}, //리스트 데이터\r\n      no: '' //게시판 숫자처리\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetList()\r\n  },\r\n  methods: {\r\n    fnGetList() {\r\n      this.requestBody = { // 데이터 전송\r\n        sk: this.search_key,\r\n        sv: this.search_value,\r\n        page: this.page,\r\n        size: this.size\r\n      }\r\n\r\n      this.$axios.get(this.$serverUrl + \"/comment/list\", {\r\n        params: this.requestBody,\r\n        headers: {}\r\n      }).then((res) => {\r\n\r\n        if (res.data.result_code === \"OK\") {\r\n          this.list = res.data.data\r\n          this.paging = res.data.pagination\r\n          this.no = this.paging.total_list_cnt - ((this.paging.page - 1) * this.paging.page_size)\r\n        }\r\n\r\n      }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    },\r\n    fnView(idx) {\r\n      this.requestBody.idx = idx\r\n      this.$router.push({\r\n        path: './detail',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnWrite() {\r\n      this.$router.push({\r\n        path: './write'\r\n      })\r\n    },\r\n    fnPage(n) {\r\n      if (this.page !== n) {\r\n        this.page = n\r\n      }\r\n\r\n      this.fnGetList()\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";AAkBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IAAE;IACP,OAAO;MACLC,WAAW,EAAE,CAAC,CAAC;MAAE;MACjBC,IAAI,EAAE,CAAC,CAAC;MAAE;MACVC,EAAE,EAAE,EAAC,CAAE;IACT;EACF,CAAC;;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,EAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV,IAAI,CAACJ,WAAU,GAAI;QAAE;QACnBM,EAAE,EAAE,IAAI,CAACC,UAAU;QACnBC,EAAE,EAAE,IAAI,CAACC,YAAY;QACrBC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,IAAI,EAAE,IAAI,CAACA;MACb;MAEA,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,IAAI,CAACC,UAAS,GAAI,eAAe,EAAE;QACjDC,MAAM,EAAE,IAAI,CAACf,WAAW;QACxBgB,OAAO,EAAE,CAAC;MACZ,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QAEf,IAAIA,GAAG,CAACnB,IAAI,CAACoB,WAAU,KAAM,IAAI,EAAE;UACjC,IAAI,CAAClB,IAAG,GAAIiB,GAAG,CAACnB,IAAI,CAACA,IAAG;UACxB,IAAI,CAACqB,MAAK,GAAIF,GAAG,CAACnB,IAAI,CAACsB,UAAS;UAChC,IAAI,CAACnB,EAAC,GAAI,IAAI,CAACkB,MAAM,CAACE,cAAa,GAAK,CAAC,IAAI,CAACF,MAAM,CAACV,IAAG,GAAI,CAAC,IAAI,IAAI,CAACU,MAAM,CAACG,SAAS;QACxF;MAEF,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;QAChB,IAAIA,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE;UAC7CC,KAAK,CAAC,mCAAmC;QAC3C;MACF,CAAC;IACH,CAAC;IACDC,MAAMA,CAACC,GAAG,EAAE;MACV,IAAI,CAAC9B,WAAW,CAAC8B,GAAE,GAAIA,GAAE;MACzB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,UAAU;QAChBC,KAAK,EAAE,IAAI,CAAClC;MACd,CAAC;IACH,CAAC;IACDmC,OAAOA,CAAA,EAAG;MACR,IAAI,CAACJ,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IACDG,MAAMA,CAACC,CAAC,EAAE;MACR,IAAI,IAAI,CAAC3B,IAAG,KAAM2B,CAAC,EAAE;QACnB,IAAI,CAAC3B,IAAG,GAAI2B,CAAA;MACd;MAEA,IAAI,CAACjC,SAAS,EAAC;IACjB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}