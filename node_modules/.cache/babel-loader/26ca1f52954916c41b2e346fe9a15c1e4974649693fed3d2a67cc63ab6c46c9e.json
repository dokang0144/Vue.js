{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      user_id: '',\n      user_pw: '',\n      user_name: ''\n    };\n  },\n  methods: {\n    async fnSign() {\n      if (this.user_name === '') {\n        alert('이름를 입력하세요.');\n        return;\n      }\n      if (this.user_id === '') {\n        alert('ID를 입력하세요.');\n        return;\n      }\n      if (this.user_pw === '') {\n        alert('비밀번호를 입력하세요.');\n        return;\n      }\n      const requestData = {\n        name: this.user_name,\n        id: this.user_id,\n        password: this.user_pw\n      };\n      try {\n        await axios.post('/api/signup', requestData);\n        alert('회원가입이 완료되었습니다.');\n        this.goToPages();\n      } catch (error) {\n        console.error(error);\n        alert('회원가입 중 오류가 발생하였습니다.');\n      }\n    },\n    async submitForm() {\n      //validation 생략\n\n      const userData = {\n        email: this.email,\n        name: this.name,\n        password: this.password,\n        position: this.position,\n        teamName: this.teamName\n      };\n      const response = await registerUser(userData);\n      if (response.status == 200) {\n        alert('환영합니다.');\n        this.$router.push('/login');\n      } else {\n        alert(response.data);\n      }\n    },\n    goToPages() {\n      this.$router.push({\n        name: 'Login'\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user_id","user_pw","user_name","methods","fnSign","alert","requestData","name","id","password","post","goToPages","error","console","submitForm","userData","email","position","teamName","response","registerUser","status","$router","push"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\common\\PageSignUp.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <h2>Please Sign Up</h2>\r\n      <div id=\"loginForm\">\r\n        <form @submit.prevent=\"fnSign\">\r\n          <p>\r\n            <input class=\"w3-input\" placeholder=\"Enter your Name\" v-model=\"user_name\"><br>\r\n          </p>\r\n          <p>\r\n            <input class=\"w3-input\" placeholder=\"Enter your ID\" v-model=\"user_id\"><br>\r\n          </p>\r\n          <p>\r\n            <input name=\"password\" class=\"w3-input\" placeholder=\"Enter your password\" v-model=\"user_pw\" type=\"password\">\r\n          </p>\r\n          <p>\r\n            <button type=\"submit\" class=\"w3-button w3-green w3-round\">Sign-Up</button>\r\n          </p>\r\n          <p><b><router-link to=\"/login\" style=\"color: #42b983\">이미 계정이 있으신가요?</router-link></b></p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user_id: '',\r\n      user_pw: '',\r\n      user_name: ''\r\n    }\r\n  },\r\n  methods: {\r\n    async fnSign() {\r\n      if (this.user_name === '') {\r\n        alert('이름를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if (this.user_id === '') {\r\n        alert('ID를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if (this.user_pw === '') {\r\n        alert('비밀번호를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      const requestData = {\r\n        name: this.user_name,\r\n        id: this.user_id,\r\n        password: this.user_pw\r\n      }\r\n\r\n      try {\r\n        await axios.post('/api/signup', requestData)\r\n        alert('회원가입이 완료되었습니다.')\r\n        this.goToPages()\r\n      } catch (error) {\r\n        console.error(error)\r\n        alert('회원가입 중 오류가 발생하였습니다.')\r\n      }\r\n    },\r\n    async submitForm() {\r\n\r\n      //validation 생략\r\n\r\n      const userData = {\r\n        email: this.email,\r\n        name: this.name,\r\n        password: this.password,\r\n        position: this.position,\r\n        teamName: this.teamName,\r\n      };\r\n\r\n      const response = await registerUser(userData);\r\n      if (response.status == 200) {\r\n        alert('환영합니다.');\r\n        this.$router.push('/login');\r\n      } else {\r\n        alert(response.data);\r\n      }\r\n    },\r\n    goToPages() {\r\n      this.$router.push({\r\n        name: 'Login'\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#loginForm {\r\n  width: 500px;\r\n  margin: auto;\r\n}\r\n</style>"],"mappings":";AA2BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,MAAMA,CAAA,EAAG;MACb,IAAI,IAAI,CAACF,SAAQ,KAAM,EAAE,EAAE;QACzBG,KAAK,CAAC,YAAY;QAClB;MACF;MAEA,IAAI,IAAI,CAACL,OAAM,KAAM,EAAE,EAAE;QACvBK,KAAK,CAAC,YAAY;QAClB;MACF;MAEA,IAAI,IAAI,CAACJ,OAAM,KAAM,EAAE,EAAE;QACvBI,KAAK,CAAC,cAAc;QACpB;MACF;MAEA,MAAMC,WAAU,GAAI;QAClBC,IAAI,EAAE,IAAI,CAACL,SAAS;QACpBM,EAAE,EAAE,IAAI,CAACR,OAAO;QAChBS,QAAQ,EAAE,IAAI,CAACR;MACjB;MAEA,IAAI;QACF,MAAMH,KAAK,CAACY,IAAI,CAAC,aAAa,EAAEJ,WAAW;QAC3CD,KAAK,CAAC,gBAAgB;QACtB,IAAI,CAACM,SAAS,EAAC;MACjB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK;QACnBP,KAAK,CAAC,qBAAqB;MAC7B;IACF,CAAC;IACD,MAAMS,UAAUA,CAAA,EAAG;MAEjB;;MAEA,MAAMC,QAAO,GAAI;QACfC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBT,IAAI,EAAE,IAAI,CAACA,IAAI;QACfE,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBQ,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBC,QAAQ,EAAE,IAAI,CAACA;MACjB,CAAC;MAED,MAAMC,QAAO,GAAI,MAAMC,YAAY,CAACL,QAAQ,CAAC;MAC7C,IAAII,QAAQ,CAACE,MAAK,IAAK,GAAG,EAAE;QAC1BhB,KAAK,CAAC,QAAQ,CAAC;QACf,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC,QAAQ,CAAC;MAC7B,OAAO;QACLlB,KAAK,CAACc,QAAQ,CAACpB,IAAI,CAAC;MACtB;IACF,CAAC;IACDY,SAASA,CAAA,EAAG;MACV,IAAI,CAACW,OAAO,CAACC,IAAI,CAAC;QAChBhB,IAAI,EAAE;MACR,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}