{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"board-list\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"border-bottom\": \"2px solid #92D050\",\n    \"height\": \"50px\"\n  }\n};\nconst _hoisted_3 = {\n  style: {\n    \"float\": \"left\",\n    \"padding\": \"0 10px 0\"\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    \"color\": \"dodgerblue\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"ul\", {\n  class: \"w3-ul\"\n}, [/*#__PURE__*/_createElementVNode(\"li\", {\n  style: {\n    \"border-bottom\": \"1px solid #D9D9D9\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"float\": \"left\",\n    \"width\": \"150px\"\n  }\n}, \"user_name\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"comment\")])], -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = {\n  style: {\n    \"text-align\": \"center\",\n    \"border\": \"solid 2px #E9E5E1\",\n    \"width\": \"700px\",\n    \"padding\": \"10px\",\n    \"margin\": \"auto\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, [_createTextVNode(\"전체 댓글 \"), _createElementVNode(\"a\", _hoisted_4, _toDisplayString(this.comments.length), 1 /* TEXT */), _createTextVNode(\"개\")])]), _hoisted_5, _hoisted_6, _createElementVNode(\"div\", _hoisted_7, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    style: {\n      \"width\": \"550px\",\n      \"height\": \"40px\",\n      \"outline\": \"none\",\n      \"border\": \"0 solid black\"\n    },\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.com = $event),\n    placeholder: \"댓글을 남겨주세요.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.com]]), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-green\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fnWrite && $options.fnWrite(...args)),\n    style: {\n      \"height\": \"40px\"\n    }\n  }, \"댓글쓰기\")])]);\n}","map":{"version":3,"names":["class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","comments","length","_hoisted_5","_hoisted_6","_hoisted_7","type","$data","com","$event","placeholder","onClick","_cache","args","$options","fnWrite"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardComment.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-list\">\r\n    <div style=\"border-bottom: 2px solid #92D050; height: 50px;\">\r\n      <p style=\"float:left; padding: 0 10px 0\">전체 댓글 <a style=\"color: dodgerblue;\">{{ this.comments.length }}</a>개</p>\r\n    </div>\r\n\r\n    <ul class=\"w3-ul\">\r\n      <li style=\"border-bottom: 1px solid #D9D9D9\">\r\n        <div style=\"float: left; width: 150px;\">user_name</div>\r\n        <div>comment</div>\r\n      </li>\r\n    </ul><br>\r\n\r\n    <div style=\"text-align: center; border: solid 2px #E9E5E1; width: 700px; padding: 10px; margin: auto\">\r\n      <input type=\"text\" style=\"width: 550px; height: 40px; outline: none; border: 0 solid black\" v-model=\"com\" placeholder=\"댓글을 남겨주세요.\">&nbsp;\r\n      <button type=\"button\" class=\"w3-button w3-green\" v-on:click=\"fnWrite\" style=\"height: 40px\">댓글쓰기</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      idx: this.$route.query.idx, // 게시글 번호\r\n      comments: [], // 댓글 정보를 저장할 배열\r\n      com: '' // 새로운 댓글 내용을 저장할 변수\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetList() // 컴포넌트가 마운트될 때 댓글 정보를 가져옵니다.\r\n  },\r\n  methods: {\r\n    fnGetList() {\r\n      // 백엔드 API를 호출하여 댓글 정보를 받아옵니다.\r\n      this.$axios.get(this.$serverUrl + \"/comments?board_id=\" + this.idx)\r\n          .then((res) => {\r\n            this.comments = res.data // 받아온 댓글 정보를 저장합니다.\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n    },\r\n    fnWrite() {\r\n      // 새로운 댓글을 생성하는 백엔드 API를 호출합니다.\r\n      let apiUrl = this.$serverUrl + '/comment'\r\n      this.$axios.post(apiUrl, {\r\n        \"board_id\": this.idx,\r\n        \"comment\": this.com\r\n      })\r\n          .then((res) => {\r\n            alert('댓글이 저장되었습니다.')\r\n            this.fnGetList() // 댓글을 다시 불러옵니다.\r\n          })\r\n          .catch((error) => {\r\n            console.log(error)\r\n          })\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAY;;EAChBC,KAAuD,EAAvD;IAAA;IAAA;EAAA;AAAuD;;EACvDA,KAAqC,EAArC;IAAA;IAAA;EAAA;AAAqC;;EAAUA,KAA0B,EAA1B;IAAA;EAAA;AAA0B;gCAG9EC,mBAAA,CAKK;EALDF,KAAK,EAAC;AAAO,I,aACfE,mBAAA,CAGK;EAHDD,KAAwC,EAAxC;IAAA;EAAA;AAAwC,I,aAC1CC,mBAAA,CAAuD;EAAlDD,KAAkC,EAAlC;IAAA;IAAA;EAAA;AAAkC,GAAC,WAAS,G,aACjDC,mBAAA,CAAkB,aAAb,SAAO,E;gCAEXA,mBAAA,CAAI;;EAEJD,KAAgG,EAAhG;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAgG;;uBAZvGE,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJF,mBAAA,CAEM,OAFNG,UAEM,GADJH,mBAAA,CAAgH,KAAhHI,UAAgH,G,iBAAvE,QAAM,GAAAJ,mBAAA,CAA4D,KAA5DK,UAA4D,EAAAC,gBAAA,MAAtBC,QAAQ,CAACC,MAAM,kB,iBAAO,GAAC,E,KAG9GC,UAKK,EAAAC,UAAI,EAETV,mBAAA,CAGM,OAHNW,UAGM,G,gBAFJX,mBAAA,CAAmI;IAA5HY,IAAI,EAAC,MAAM;IAACb,KAAwE,EAAxE;MAAA;MAAA;MAAA;MAAA;IAAA,CAAwE;+DAAUc,KAAA,CAAAC,GAAG,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAAjBH,KAAA,CAAAC,GAAG,E,oBAA2B,IACnI,GAAAd,mBAAA,CAAwG;IAAhGY,IAAI,EAAC,QAAQ;IAACd,KAAK,EAAC,oBAAoB;IAAMmB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IAAEpB,KAAoB,EAApB;MAAA;IAAA;KAAqB,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}