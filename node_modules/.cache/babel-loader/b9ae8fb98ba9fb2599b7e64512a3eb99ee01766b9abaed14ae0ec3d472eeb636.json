{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    //변수생성\n    return {\n      show: false,\n      requestBody: {},\n      //리스트 페이지 데이터전송\n      list: {},\n      //리스트 데이터\n      no: '',\n      //게시판 숫자처리\n      paging: {\n        block: 0,\n        end_page: 0,\n        next_block: 0,\n        page: 0,\n        page_size: 0,\n        prev_block: 0,\n        start_index: 0,\n        start_page: 0,\n        total_block_cnt: 0,\n        total_list_cnt: 0,\n        total_page_cnt: 0\n      },\n      //페이징 데이터\n      page: this.$route.query.page ? this.$route.query.page : 1,\n      size: this.$route.query.size ? this.$route.query.size : 10,\n      search_key: this.$route.query.sk ? this.$route.query.sk : '',\n      search_value: this.$route.query.sv ? this.$route.query.sv : '',\n      paginavigation: function () {\n        //페이징 처리 for문 커스텀\n        let pageNumber = []; //;\n        let start_page = this.paging.start_page;\n        let end_page = this.paging.end_page;\n        for (let i = start_page; i <= end_page; i++) pageNumber.push(i);\n        return pageNumber;\n      }\n    };\n  },\n  mounted() {\n    this.fnGetList();\n    this.show = true;\n  },\n  methods: {\n    fnGetList() {\n      this.requestBody = {\n        // 데이터 전송\n        sk: this.search_key,\n        sv: this.search_value,\n        page: this.page,\n        size: this.size\n      };\n      this.$axios.get(this.$serverUrl + \"/board/list\", {\n        params: this.requestBody,\n        headers: {}\n      }).then(res => {\n        if (res.data.result_code === \"OK\") {\n          this.list = res.data.data;\n          this.paging = res.data.pagination;\n          this.no = this.paging.total_list_cnt - (this.paging.page - 1) * this.paging.page_size;\n        }\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    },\n    fnView(idx) {\n      this.requestBody.idx = idx;\n      this.$router.push({\n        path: './detail',\n        query: this.requestBody\n      });\n    },\n    fnWrite() {\n      this.$router.push({\n        path: './write'\n      });\n    },\n    fnPage(n) {\n      if (this.page !== n) {\n        this.page = n;\n      }\n      this.fnGetList();\n    }\n  }\n};","map":{"version":3,"names":["data","show","requestBody","list","no","paging","block","end_page","next_block","page","page_size","prev_block","start_index","start_page","total_block_cnt","total_list_cnt","total_page_cnt","$route","query","size","search_key","sk","search_value","sv","paginavigation","pageNumber","i","push","mounted","fnGetList","methods","$axios","get","$serverUrl","params","headers","then","res","result_code","pagination","catch","err","message","indexOf","alert","fnView","idx","$router","path","fnWrite","fnPage","n"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardList.vue"],"sourcesContent":["<template xmlns:white-space=\"http://www.w3.org/1999/xhtml\">\r\n  <span v-if=\"this.$store.state.isLogin && user\">{{ user.userName }}님</span>\r\n  <Transition>\r\n  <div class=\"board-list\" v-if=\"show\" style=\"-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\">\r\n    <div class=\"common-buttons\">\r\n      <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnWrite\">등록</button>\r\n    </div>\r\n    <table class=\"w3-table-all\">\r\n      <thead>\r\n      <tr>\r\n        <th>No</th>\r\n        <th>제목</th>\r\n        <th>작성자</th>\r\n        <th>등록일시</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr v-for=\"(row, idx) in list\" :key=\"idx\">\r\n        <td>{{ row.idx }}</td>\r\n        <td><a style=\"cursor: pointer\" v-on:click=\"fnView(`${row.idx}`)\">{{ row.title }}</a></td>\r\n        <td>{{ row.author }}</td>\r\n        <td>{{ row.created_at }}</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <div class=\"pagination w3-padding-16 w3-small\" v-if=\"paging.total_list_cnt > 0\">\r\n<span class=\"pg\">\r\n      <a href=\"javascript:;\" @click=\"fnPage(1)\" class=\"first w3-button w3-bar-item w3-border\">&lt;&lt;</a>\r\n      <a href=\"javascript:;\" v-if=\"paging.start_page > 10\" @click=\"fnPage(`${paging.start_page-1}`)\"\r\n         class=\"prev w3-button w3-bar-item w3-border\">&lt;</a>\r\n      <template v-for=\" (n,index) in paginavigation()\">\r\n          <template v-if=\"paging.page==n\">\r\n              <strong class=\"w3-button w3-bar-item w3-border w3-green\" :key=\"index\">{{ n }}</strong>\r\n          </template>\r\n          <template v-else>\r\n              <a class=\"w3-button w3-bar-item w3-border\" href=\"javascript:;\" @click=\"fnPage(`${n}`)\" :key=\"index\">{{ n }}</a>\r\n          </template>\r\n      </template>\r\n      <a href=\"javascript:;\" v-if=\"paging.total_page_cnt > paging.end_page\"\r\n         @click=\"fnPage(`${paging.end_page+1}`)\" class=\"next w3-button w3-bar-item w3-border\">&gt;</a>\r\n      <a href=\"javascript:;\" @click=\"fnPage(`${paging.total_page_cnt}`)\" class=\"last w3-button w3-bar-item w3-border\">&gt;&gt;</a>\r\n      </span>\r\n    </div>\r\n\r\n    <div>\r\n      <select v-model=\"search_key\" id=\"selectForm\" class=\"w3-select\" style=\"background: none; outline: none\">\r\n        <option value=\"\">- 선택 -</option>\r\n        <option value=\"author\">작성자</option>\r\n        <option value=\"title\">제목</option>\r\n        <option value=\"contents\">내용</option>\r\n      </select>\r\n      &nbsp;\r\n      <input id=\"textForm\" type=\"text\" v-model=\"search_value\" @keyup.enter=\"fnPage()\" style=\"background: none; outline: none\">\r\n      &nbsp;\r\n      <button @click=\"fnPage()\" class=\"w3-button\">검색</button>\r\n    </div>\r\n\r\n    <div style=\"width: 100%;\">\r\n      <hr/>\r\n      <footer>\r\n        <img src=\"../../assets/footer.png\" style=\"height: 200px\"><img src=\"../../assets/footer2.png\" style=\"height: 200px\">\r\n      </footer>\r\n    </div>\r\n  </div>\r\n  </Transition>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      show: false,\r\n      requestBody: {}, //리스트 페이지 데이터전송\r\n      list: {}, //리스트 데이터\r\n      no: '', //게시판 숫자처리\r\n      paging: {\r\n        block: 0,\r\n        end_page: 0,\r\n        next_block: 0,\r\n        page: 0,\r\n        page_size: 0,\r\n        prev_block: 0,\r\n        start_index: 0,\r\n        start_page: 0,\r\n        total_block_cnt: 0,\r\n        total_list_cnt: 0,\r\n        total_page_cnt: 0,\r\n      }, //페이징 데이터\r\n      page: this.$route.query.page ? this.$route.query.page : 1,\r\n      size: this.$route.query.size ? this.$route.query.size : 10,\r\n      search_key: this.$route.query.sk ? this.$route.query.sk : '',\r\n      search_value: this.$route.query.sv ? this.$route.query.sv : '',\r\n      paginavigation: function () { //페이징 처리 for문 커스텀\r\n        let pageNumber = [] //;\r\n        let start_page = this.paging.start_page;\r\n        let end_page = this.paging.end_page;\r\n        for (let i = start_page; i <= end_page; i++) pageNumber.push(i);\r\n        return pageNumber;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetList()\r\n    this.show = true;\r\n  },\r\n  methods: {\r\n    fnGetList() {\r\n      this.requestBody = { // 데이터 전송\r\n        sk: this.search_key,\r\n        sv: this.search_value,\r\n        page: this.page,\r\n        size: this.size\r\n      }\r\n\r\n      this.$axios.get(this.$serverUrl + \"/board/list\", {\r\n        params: this.requestBody,\r\n        headers: {}\r\n      }).then((res) => {\r\n\r\n        if (res.data.result_code === \"OK\") {\r\n          this.list = res.data.data\r\n          this.paging = res.data.pagination\r\n          this.no = this.paging.total_list_cnt - ((this.paging.page - 1) * this.paging.page_size)\r\n        }\r\n\r\n      }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    },\r\n    fnView(idx) {\r\n      this.requestBody.idx = idx\r\n      this.$router.push({\r\n        path: './detail',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnWrite() {\r\n      this.$router.push({\r\n        path: './write'\r\n      })\r\n    },\r\n    fnPage(n) {\r\n      if (this.page !== n) {\r\n        this.page = n\r\n      }\r\n\r\n      this.fnGetList()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#selectForm {\r\n  width: 100px;\r\n  margin: auto;\r\n}\r\n\r\n#textForm {\r\n  height: 38px;\r\n  border-top: 0;\r\n  border-left: 0;\r\n  border-right: 0;\r\n  border-bottom-color: #CCCCCC;\r\n  border-bottom-width: 1px;\r\n}\r\n\r\n.v-enter-active,\r\n.v-leave-active {\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.v-enter-from,\r\n.v-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}