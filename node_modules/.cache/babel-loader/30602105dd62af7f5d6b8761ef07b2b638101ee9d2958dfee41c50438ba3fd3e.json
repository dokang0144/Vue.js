{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelCheckbox as _vModelCheckbox, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"계정 만들기\", -1 /* HOISTED */);\nconst _hoisted_2 = {\n  id: \"loginForm\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"http://10.1.10.226:8080/about\",\n  style: {\n    \"vertical-align\": \"middle\"\n  }\n}, \"About\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"span\", {\n  style: {\n    \"vertical-align\": \"middle\"\n  }\n}, \"의 내용을 읽고 이용약관에 동의합니다.\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"w3-button w3-green w3-round\"\n}, \"Sign-Up\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.fnSign && $options.fnSign(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"w3-input\",\n    name: \"uid\",\n    placeholder: \"이름을 입력해주세요\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user_name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user_name]]), _hoisted_3]), _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"w3-input\",\n    name: \"uid\",\n    placeholder: \"아이디를 입력해주세요\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user_id = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user_id]]), _hoisted_4]), _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    name: \"password\",\n    class: \"w3-input\",\n    placeholder: \"비밀번호를 입력해주세요\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user_pw = $event),\n    type: \"password\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user_pw]])]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.check = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelCheckbox, $data.check]]), _hoisted_5, _hoisted_6]), _hoisted_7, _createElementVNode(\"p\", null, [_createElementVNode(\"b\", null, [_createVNode(_component_router_link, {\n    to: \"/login\",\n    style: {\n      \"color\": \"#42b983\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"이미 계정이 있으신가요?\")]),\n    _: 1 /* STABLE */\n  })])])], 32 /* HYDRATE_EVENTS */)])])]);\n}","map":{"version":3,"names":["_createElementVNode","id","href","style","type","class","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","fnSign","name","placeholder","$data","user_name","$event","_hoisted_3","user_id","_hoisted_4","user_pw","check","_hoisted_5","_hoisted_6","_hoisted_7","_createVNode","_component_router_link","to"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\common\\PageSighUp.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <h2>계정 만들기</h2>\r\n      <div id=\"loginForm\">\r\n        <form @submit.prevent=\"fnSign\">\r\n          <p>\r\n            <input class=\"w3-input\" name=\"uid\" placeholder=\"이름을 입력해주세요\" v-model=\"user_name\"><br>\r\n          </p>\r\n          <p>\r\n            <input class=\"w3-input\" name=\"uid\" placeholder=\"아이디를 입력해주세요\" v-model=\"user_id\"><br>\r\n          </p>\r\n          <p>\r\n            <input name=\"password\" class=\"w3-input\" placeholder=\"비밀번호를 입력해주세요\" v-model=\"user_pw\" type=\"password\">\r\n          </p>\r\n          <div>\r\n            <input type=\"checkbox\" v-model=\"check\"><a href=\"http://10.1.10.226:8080/about\" style=\"vertical-align: middle;\">About</a><span style=\"vertical-align: middle;\">의 내용을 읽고 이용약관에 동의합니다.</span>\r\n          </div>\r\n          <p>\r\n            <button type=\"submit\" class=\"w3-button w3-green w3-round\">Sign-Up</button>\r\n          </p>\r\n          <p><b><router-link to=\"/login\" style=\"color: #42b983\">이미 계정이 있으신가요?</router-link></b></p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: this.$route.query,\r\n      idx: this.$route.query.idx,\r\n\r\n      user_name: '',\r\n      user_id: '',\r\n      user_pw: '',\r\n      check: false\r\n    }\r\n  },\r\n  mounted() {\r\n  },\r\n  methods: {\r\n    fnSign() {\r\n      this.form = {\r\n        \"idx\": this.idx,\r\n        \"title\": this.title,\r\n        \"contents\": this.contents,\r\n        \"author\": this.author\r\n      }\r\n\r\n      if(this.user_name === '') {\r\n        alert('이름을 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if (this.user_id === '') {\r\n        alert('ID를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if (this.user_pw === '') {\r\n        alert('비밀번호를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if(!this.check) {\r\n        alert('이용약관에 동의해주세요')\r\n        return\r\n      }\r\n\r\n      const formData = new FormData();\r\n      formData.append('user_name', this.user_name);\r\n      formData.append('user_id', this.user_id);\r\n      formData.append('user_pw', this.user_pw);\r\n      formData.append('check', this.check);\r\n\r\n      // POST 요청 보내기\r\n      axios.post('/api/signup', formData)\r\n          .then((response) => {\r\n            console.log(response.data);\r\n            // 회원가입 성공 처리\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            // 회원가입 실패 처리\r\n          });\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#loginForm {\r\n  width: 500px;\r\n  margin: auto;\r\n}\r\ninput[type=\"checkbox\"] {\r\n  vertical-align: middle;\r\n  margin-right: 10px;\r\n}\r\n</style>"],"mappings":";gCAGMA,mBAAA,CAAe,YAAX,QAAM;;EACLC,EAAE,EAAC;AAAW;gCAGmED,mBAAA,CAAI;gCAGLA,mBAAA,CAAI;gCAM5CA,mBAAA,CAAiF;EAA9EE,IAAI,EAAC,+BAA+B;EAACC,KAA+B,EAA/B;IAAA;EAAA;GAAgC,OAAK;gCAAIH,mBAAA,CAAkE;EAA5DG,KAA+B,EAA/B;IAAA;EAAA;AAA+B,GAAC,uBAAqB;gCAErLH,mBAAA,CAEI,Y,aADFA,mBAAA,CAA0E;EAAlEI,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;GAA8B,SAAO,E;;;;uBAlB3EC,mBAAA,CAwBM,cAvBJN,mBAAA,CAsBM,cArBJO,UAAe,EACfP,mBAAA,CAmBM,OAnBNQ,UAmBM,GAlBJR,mBAAA,CAiBO;IAjBAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;MAC3BZ,mBAAA,CAEI,Y,gBADFA,mBAAA,CAAgF;IAAzEK,KAAK,EAAC,UAAU;IAACU,IAAI,EAAC,KAAK;IAACC,WAAW,EAAC,YAAY;+DAAUC,KAAA,CAAAC,SAAS,GAAAC,MAAA;iDAATF,KAAA,CAAAC,SAAS,E,GAAEE,UAAI,C,GAEtFpB,mBAAA,CAEI,Y,gBADFA,mBAAA,CAA+E;IAAxEK,KAAK,EAAC,UAAU;IAACU,IAAI,EAAC,KAAK;IAACC,WAAW,EAAC,aAAa;+DAAUC,KAAA,CAAAI,OAAO,GAAAF,MAAA;iDAAPF,KAAA,CAAAI,OAAO,E,GAAEC,UAAI,C,GAErFtB,mBAAA,CAEI,Y,gBADFA,mBAAA,CAAqG;IAA9Fe,IAAI,EAAC,UAAU;IAACV,KAAK,EAAC,UAAU;IAACW,WAAW,EAAC,cAAc;+DAAUC,KAAA,CAAAM,OAAO,GAAAJ,MAAA;IAAEf,IAAI,EAAC;iDAAda,KAAA,CAAAM,OAAO,E,KAErFvB,mBAAA,CAEM,c,gBADJA,mBAAA,CAAuC;IAAhCI,IAAI,EAAC,UAAU;+DAAUa,KAAA,CAAAO,KAAK,GAAAL,MAAA;qDAALF,KAAA,CAAAO,KAAK,E,GAAEC,UAAiF,EAAAC,UAAkE,C,GAE5LC,UAEI,EACJ3B,mBAAA,CAAyF,YAAtFA,mBAAA,CAAkF,YAA/E4B,YAAA,CAA2EC,sBAAA;IAA9DC,EAAE,EAAC,QAAQ;IAAC3B,KAAsB,EAAtB;MAAA;IAAA;;sBAAuB,MAAa,C,iBAAb,eAAa,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}