{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport BoardComment from \"@/views/board/BoardComment.vue\";\nexport default {\n  components: {\n    BoardComment\n  },\n  data() {\n    //변수생성\n    return {\n      requestBody: this.$route.query,\n      idx: this.$route.query.idx,\n      title: '',\n      author: '',\n      contents: '',\n      created_at: ''\n    };\n  },\n  mounted() {\n    this.fnGetView();\n  },\n  methods: {\n    fnGetView() {\n      this.$axios.get(this.$serverUrl + '/board/' + this.idx, {\n        params: this.requestBody\n      }).then(res => {\n        this.title = res.data.title;\n        this.author = res.data.author;\n        this.contents = res.data.contents;\n        this.created_at = res.data.created_at;\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    },\n    fnList() {\n      delete this.requestBody.idx;\n      this.$router.push({\n        path: './list',\n        query: this.requestBody\n      });\n    },\n    fnUpdate() {\n      this.$router.push({\n        path: './write',\n        query: this.requestBody\n      });\n    },\n    fnDelete() {\n      if (!confirm(\"삭제하시겠습니까?\")) return;\n      this.$axios.delete(this.$serverUrl + '/board/' + this.idx, {}).then(() => {\n        alert('삭제되었습니다.');\n        this.fnList();\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n};","map":{"version":3,"names":["ref","BoardComment","components","data","requestBody","$route","query","idx","title","author","contents","created_at","mounted","fnGetView","methods","$axios","get","$serverUrl","params","then","res","catch","err","message","indexOf","alert","fnList","$router","push","path","fnUpdate","fnDelete","confirm","delete","console","log"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardDetail.vue"],"sourcesContent":["<template>\r\n  <div className=\"board-detail\">\r\n    <div className=\"board-contents\">\r\n      <h3>{{ title }}</h3>\r\n      <div>\r\n        <strong className=\"w3-large\">{{ author }}</strong>\r\n        <br>\r\n        <span>{{ created_at }}</span>\r\n      </div>\r\n    </div>\r\n    <div className=\"board-contents\">\r\n      <span>{{ contents }}</span>\r\n    </div>\r\n    <div className=\"common-buttons\">\r\n      <button type=\"button\" className=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnUpdate\">수정</button>&nbsp;\r\n      <button type=\"button\" className=\"w3-button w3-round w3-red\" v-on:click=\"fnDelete\">삭제</button>&nbsp;\r\n      <button type=\"button\" className=\"w3-button w3-round w3-gray\" v-on:click=\"fnList\">목록</button>\r\n    </div>\r\n    <board-comment></board-comment>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue'\r\nimport BoardComment from \"@/views/board/BoardComment.vue\";\r\n\r\nexport default {\r\n  components: {BoardComment},\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: this.$route.query,\r\n      idx: this.$route.query.idx,\r\n\r\n      title: '',\r\n      author: '',\r\n      contents: '',\r\n      created_at: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetView()\r\n  },\r\n  methods: {\r\n    fnGetView() {\r\n      this.$axios.get(this.$serverUrl + '/board/' + this.idx, {\r\n        params: this.requestBody\r\n      }).then((res) => {\r\n        this.title = res.data.title\r\n        this.author = res.data.author\r\n        this.contents = res.data.contents\r\n        this.created_at = res.data.created_at\r\n      }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    },\r\n    fnList() {\r\n      delete this.requestBody.idx\r\n      this.$router.push({\r\n        path: './list',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnUpdate() {\r\n      this.$router.push({\r\n        path: './write',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnDelete() {\r\n      if (!confirm(\"삭제하시겠습니까?\")) return\r\n\r\n      this.$axios.delete(this.$serverUrl + '/board/' + this.idx, {})\r\n          .then(() => {\r\n            alert('삭제되었습니다.')\r\n            this.fnList();\r\n          }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n\r\n</style>"],"mappings":";AAuBA,SAASA,GAAE,QAAS,KAAI;AACxB,OAAOC,YAAW,MAAO,gCAAgC;AAEzD,eAAe;EACbC,UAAU,EAAE;IAACD;EAAY,CAAC;EAC1BE,IAAIA,CAAA,EAAG;IAAE;IACP,OAAO;MACLC,WAAW,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK;MAC9BC,GAAG,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,GAAG;MAE1BC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE;IACd;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,EAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV,IAAI,CAACE,MAAM,CAACC,GAAG,CAAC,IAAI,CAACC,UAAS,GAAI,SAAQ,GAAI,IAAI,CAACV,GAAG,EAAE;QACtDW,MAAM,EAAE,IAAI,CAACd;MACf,CAAC,CAAC,CAACe,IAAI,CAAEC,GAAG,IAAK;QACf,IAAI,CAACZ,KAAI,GAAIY,GAAG,CAACjB,IAAI,CAACK,KAAI;QAC1B,IAAI,CAACC,MAAK,GAAIW,GAAG,CAACjB,IAAI,CAACM,MAAK;QAC5B,IAAI,CAACC,QAAO,GAAIU,GAAG,CAACjB,IAAI,CAACO,QAAO;QAChC,IAAI,CAACC,UAAS,GAAIS,GAAG,CAACjB,IAAI,CAACQ,UAAS;MACtC,CAAC,CAAC,CAACU,KAAK,CAAEC,GAAG,IAAK;QAChB,IAAIA,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE;UAC7CC,KAAK,CAAC,mCAAmC;QAC3C;MACF,CAAC;IACH,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACtB,WAAW,CAACG,GAAE;MAC1B,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,QAAQ;QACdvB,KAAK,EAAE,IAAI,CAACF;MACd,CAAC;IACH,CAAC;IACD0B,QAAQA,CAAA,EAAG;MACT,IAAI,CAACH,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,SAAS;QACfvB,KAAK,EAAE,IAAI,CAACF;MACd,CAAC;IACH,CAAC;IACD2B,QAAQA,CAAA,EAAG;MACT,IAAI,CAACC,OAAO,CAAC,WAAW,CAAC,EAAE;MAE3B,IAAI,CAACjB,MAAM,CAACkB,MAAM,CAAC,IAAI,CAAChB,UAAS,GAAI,SAAQ,GAAI,IAAI,CAACV,GAAG,EAAE,CAAC,CAAC,EACxDY,IAAI,CAAC,MAAM;QACVM,KAAK,CAAC,UAAU;QAChB,IAAI,CAACC,MAAM,EAAE;MACf,CAAC,CAAC,CAACL,KAAK,CAAEC,GAAG,IAAK;QACpBY,OAAO,CAACC,GAAG,CAACb,GAAG,CAAC;MAClB,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}