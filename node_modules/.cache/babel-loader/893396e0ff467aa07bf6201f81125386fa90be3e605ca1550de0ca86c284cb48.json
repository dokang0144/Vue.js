{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  className: \"board-list\",\n  style: {\n    \"-webkit-user-select\": \"none\",\n    \"-moz-user-select\": \"none\",\n    \"-ms-user-select\": \"none\",\n    \"user-select\": \"none\"\n  }\n};\nconst _hoisted_2 = {\n  key: 0,\n  style: {\n    \"border-bottom\": \"2px solid #92D050\",\n    \"height\": \"50px\"\n  },\n  id: \"outer\"\n};\nconst _hoisted_3 = {\n  style: {\n    \"float\": \"left\",\n    \"padding\": \"0 10px 0\"\n  },\n  id: \"inner\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"color\": \"dodgerblue\"\n  }\n};\nconst _hoisted_5 = {\n  key: 1,\n  className: \"w3-ul\",\n  id: \"inner\"\n};\nconst _hoisted_6 = {\n  style: {\n    \"float\": \"left\",\n    \"width\": \"150px\"\n  }\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  className: \"w3-ul\"\n};\nconst _hoisted_9 = {\n  style: {\n    \"float\": \"left\",\n    \"width\": \"150px\"\n  }\n};\nconst _hoisted_10 = {\n  style: {\n    \"margin-right\": \"0\"\n  }\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"font-size\": \"5px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_12 = {\n  key: 0\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"button\", {\n  className: \"w3-button w3-blue\",\n  style: {\n    \"height\": \"40px\"\n  },\n  type: \"submit\",\n  id: \"inner\"\n}, \"대댓글쓰기\", -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_15 = {\n  style: {\n    \"text-align\": \"center\",\n    \"border\": \"solid 2px #E9E5E1\",\n    \"width\": \"700px\",\n    \"padding\": \"10px\",\n    \"margin\": \"auto\"\n  }\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"button\", {\n  className: \"w3-button w3-green\",\n  style: {\n    \"height\": \"40px\"\n  },\n  type: \"submit\",\n  id: \"inner\"\n}, \"댓글쓰기\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    duration: \"550\",\n    name: \"nested\"\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [$data.show ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, [_createTextVNode(\"전체 댓글 \"), _createElementVNode(\"a\", _hoisted_4, _toDisplayString($data.list.length), 1 /* TEXT */), _createTextVNode(\"개\")])])) : _createCommentVNode(\"v-if\", true), $data.show ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, (row, idx) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: idx,\n        style: {\n          \"border-bottom\": \"2px solid #D9D9D9\"\n        }\n      }, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString(row.user_name), 1 /* TEXT */), _createElementVNode(\"div\", {\n        style: {\n          \"margin-right\": \"0\",\n          \"cursor\": \"pointer\"\n        },\n        onClick: $event => $options.toggleReplyForm(row.idx)\n      }, _toDisplayString(row.comment), 9 /* TEXT, PROPS */, _hoisted_7), _createElementVNode(\"ul\", _hoisted_8, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.replies.filter(item => item.comment === row.idx), (reply, idx) => {\n        return _openBlock(), _createElementBlock(\"li\", {\n          key: idx,\n          style: {\n            \"border-bottom\": \"1px solid #D9D9D9\",\n            \"width\": \"600px\",\n            \"margin\": \"0 20px\"\n          }\n        }, [_createElementVNode(\"div\", _hoisted_9, _toDisplayString(reply.user_name), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(reply.replies), 1 /* TEXT */)]);\n      }), 128 /* KEYED_FRAGMENT */))]), _hoisted_11, $data.clickIdx === row.idx ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [_createElementVNode(\"form\", {\n        onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.fnReplies && $options.fnReplies(...args), [\"prevent\"])),\n        style: {\n          \"text-align\": \"center\",\n          \"padding\": \"0\",\n          \"margin\": \"0\"\n        }\n      }, [_withDirectives(_createElementVNode(\"input\", {\n        ref_for: true,\n        ref: \"repliesInput\",\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.replie = $event),\n        placeholder: \"대댓글을 남겨주세요.\",\n        style: {\n          \"width\": \"600px\",\n          \"height\": \"40px\",\n          \"outline\": \"none\"\n        },\n        id: \"textForm\",\n        type: \"text\"\n      }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.replie]]), _hoisted_13], 32 /* HYDRATE_EVENTS */)])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), _hoisted_14, _createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"form\", {\n      onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.fnSave && $options.fnSave(...args), [\"prevent\"]))\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      ref: \"commentInput\",\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.comment = $event),\n      placeholder: \"댓글을 남겨주세요.\",\n      style: {\n        \"width\": \"550px\",\n        \"height\": \"40px\",\n        \"outline\": \"none\",\n        \"border\": \"0 solid black\"\n      },\n      type: \"text\",\n      id: \"inner\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.comment]]), _createTextVNode(\"  \"), _hoisted_16], 32 /* HYDRATE_EVENTS */)]), _hoisted_17])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["className","style","id","_createElementVNode","type","_createBlock","_Transition","duration","name","_hoisted_1","$data","show","_createElementBlock","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","list","length","_hoisted_5","_Fragment","_renderList","row","idx","key","_hoisted_6","user_name","onClick","$event","$options","toggleReplyForm","comment","_hoisted_7","_hoisted_8","replies","filter","item","reply","_hoisted_9","_hoisted_10","_hoisted_11","clickIdx","_hoisted_12","onSubmit","_cache","_withModifiers","args","fnReplies","ref","replie","placeholder","_hoisted_13","_hoisted_14","_hoisted_15","fnSave","_hoisted_16","_hoisted_17"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardComment.vue"],"sourcesContent":["<template>\r\n  <Transition duration=\"550\" name=\"nested\">\r\n  <div className=\"board-list\" style=\"-webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\">\r\n    <div style=\"border-bottom: 2px solid #92D050; height: 50px;\" v-if=\"show\" id=\"outer\">\r\n      <p style=\"float:left; padding: 0 10px 0\" id=\"inner\">전체 댓글 <a style=\"color: dodgerblue;\">{{ list.length }}</a>개</p>\r\n    </div>\r\n\r\n    <ul className=\"w3-ul\" v-if=\"show\" id=\"inner\">\r\n      <li v-for=\"(row, idx) in list\" :key=\"idx\" style=\"border-bottom: 2px solid #D9D9D9;\">\r\n        <div style=\"float: left; width: 150px;\">{{ row.user_name }}</div>\r\n        <div style=\"margin-right: 0; cursor: pointer\" @click=\"toggleReplyForm(row.idx)\">{{ row.comment }}</div>\r\n        <ul className=\"w3-ul\">\r\n          <li v-for=\"(reply, idx) in replies.filter(item => item.comment === row.idx)\" :key=\"idx\" style=\"border-bottom: 1px solid #D9D9D9; width: 600px; margin: 0 20px\">\r\n            <div style=\"float: left; width: 150px;\">{{ reply.user_name }}</div>\r\n            <div style=\"margin-right: 0;\">{{ reply.replies }}</div>\r\n          </li>\r\n        </ul><p style=\"font-size: 5px\"> </p>\r\n        <div v-if=\"clickIdx === row.idx\">\r\n          <form v-on:submit.prevent=\"fnReplies\" style=\"text-align: center; padding: 0; margin: 0\">\r\n          <input ref=\"repliesInput\" v-model=\"replie\" placeholder=\"대댓글을 남겨주세요.\"\r\n                 style=\"width: 600px; height: 40px; outline: none;\" id=\"textForm\"\r\n                 type=\"text\">\r\n            <button className=\"w3-button w3-blue\" style=\"height: 40px\" type=\"submit\" id=\"inner\">대댓글쓰기</button>\r\n          </form>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <br>\r\n\r\n    <div style=\"text-align: center; border: solid 2px #E9E5E1; width: 700px; padding: 10px; margin: auto\" >\r\n      <form v-on:submit.prevent=\"fnSave\">\r\n        <input ref=\"commentInput\" v-model=\"comment\" placeholder=\"댓글을 남겨주세요.\"\r\n               style=\"width: 550px; height: 40px; outline: none; border: 0 solid black\"\r\n               type=\"text\" id=\"inner\">&nbsp;\r\n        <button className=\"w3-button w3-green\" style=\"height: 40px\" type=\"submit\" id=\"inner\">댓글쓰기</button>\r\n      </form>\r\n    </div><br>\r\n  </div>\r\n  </Transition>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: {}, //리스트 페이지 데이터전송\r\n      list: {}, //리스트 데이터\r\n      replies: {}, //댓글 데이터\r\n      no: '', //게시판 숫자처리\r\n      idx: this.$route.query.idx,\r\n      clickIdx: '',\r\n\r\n      user_name: '',\r\n      comment: '',\r\n      board: '',\r\n      show: false,\r\n\r\n      replie: '',\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    this.show = true;\r\n    this.fnGetList()\r\n    this.fnGetReplies()\r\n\r\n  },\r\n  methods: {\r\n\r\n    toggleReplyForm(rowIdx) {\r\n      if (this.clickIdx === rowIdx) {\r\n        // 이미 선택된 댓글인 경우\r\n        this.clickIdx = null;\r\n      } else {\r\n        // 선택한 댓글이 다른 경우\r\n        this.clickIdx = rowIdx;\r\n      }\r\n\r\n      // 선택된 댓글의 showReply를 반전시킴\r\n      this.list.forEach(row => {\r\n        if (row.idx === rowIdx) {\r\n          row.showReply = !row.showReply;\r\n        } else {\r\n          row.showReply = false;\r\n        }\r\n      });\r\n    },\r\n    fnGetList() {\r\n      this.$axios.get(this.$serverUrl + \"/comment/list\", {\r\n        params: this.requestBody,\r\n        headers: {}\r\n      }).then((res) => {\r\n        this.list = res.data.filter((board) => board.board == this.idx)  //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\r\n      }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    },\r\n    fnGetReplies() {\r\n      this.$axios.get(this.$serverUrl + \"/replies/list\", {\r\n        params: this.requestBody,\r\n        headers: {}\r\n      }).then((res) => {\r\n        this.replies = res.data\r\n      })\r\n    },\r\n    fnSave() {\r\n\r\n      if (!this.comment) {\r\n        alert('댓글을 입력해주세요.')\r\n        this.$refs.commentInput.focus()\r\n        return\r\n      }\r\n\r\n      let apiUrl = this.$serverUrl + '/comment'\r\n      this.user_name = prompt(\"이름을 입력해주세요.\");\r\n      this.form = {\r\n        \"user_name\": this.user_name,\r\n        \"comment\": this.comment,\r\n        \"board\": this.idx\r\n      }\r\n\r\n      if (!this.user_name) {\r\n        alert('이름을 입력해주세요.')\r\n        return\r\n      }\r\n\r\n      //INSERT\r\n      this.$axios.post(apiUrl, this.form)\r\n          .then(() => {\r\n            alert('댓글이 저장되었습니다.')\r\n            window.location.reload()\r\n          })\r\n          .catch((err) => {\r\n            if (err.message.indexOf('Network Error') > -1) {\r\n              alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n            }\r\n          })\r\n    },\r\n    fnReplies() {\r\n\r\n      if (!this.replies) {\r\n        alert('대댓글을 입력해주세요.')\r\n        this.$refs.repliesInput.focus()\r\n        return\r\n      }\r\n\r\n      let apiUrl = this.$serverUrl + '/replies'\r\n      this.user_name = prompt(\"이름을 입력해주세요.\");\r\n      this.form = {\r\n        \"user_name\": this.user_name,\r\n        \"replies\": this.replie,\r\n        \"comment\": this.clickIdx\r\n      }\r\n\r\n      if (!this.user_name) {\r\n        alert('이름을 입력해주세요.')\r\n        return\r\n      }\r\n\r\n      //INSERT\r\n      this.$axios.post(apiUrl, this.form)\r\n          .then(() => {\r\n            alert('댓글이 저장되었습니다.')\r\n            window.location.reload()\r\n          })\r\n          .catch((err) => {\r\n            if (err.message.indexOf('Network Error') > -1) {\r\n              alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n            }\r\n          })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.nested-enter-active, .nested-leave-active {\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n/* delay leave of parent element */\r\n.nested-leave-active {\r\n  transition-delay: 0.25s;\r\n}\r\n\r\n.nested-enter-from,\r\n.nested-leave-to {\r\n  transform: translateY(30px);\r\n  opacity: 0;\r\n}\r\n\r\n/* we can also transition nested elements using nested selectors */\r\n.nested-enter-active #inner,\r\n.nested-leave-active #inner {\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n/* delay enter of nested element */\r\n.nested-enter-active #inner {\r\n  transition-delay: 0.25s;\r\n}\r\n\r\n.nested-enter-from #inner,\r\n.nested-leave-to #inner {\r\n  transform: translateX(30px);\r\n  opacity: 0.001;\r\n}\r\n\r\n.v-enter-active,\r\n.v-leave-active {\r\n  transition: opacity 0.5s ease;\r\n}\r\n\r\n.v-enter-from,\r\n.v-leave-to {\r\n  opacity: 0;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}