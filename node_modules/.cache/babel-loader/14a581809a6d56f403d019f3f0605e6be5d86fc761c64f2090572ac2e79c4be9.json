{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, Transition as _Transition, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"board-list\",\n  id: \"outer\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"border-bottom\": \"2px solid #92D050\",\n    \"height\": \"50px\"\n  }\n};\nconst _hoisted_3 = {\n  style: {\n    \"float\": \"left\",\n    \"padding\": \"0 10px 0\"\n  },\n  id: \"inner\"\n};\nconst _hoisted_4 = {\n  style: {\n    \"color\": \"dodgerblue\"\n  }\n};\nconst _hoisted_5 = {\n  className: \"w3-ul\"\n};\nconst _hoisted_6 = {\n  style: {\n    \"float\": \"left\",\n    \"width\": \"150px\"\n  }\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = {\n  style: {\n    \"text-align\": \"center\",\n    \"border\": \"solid 2px #E9E5E1\",\n    \"width\": \"700px\",\n    \"padding\": \"10px\",\n    \"margin\": \"auto\"\n  }\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"button\", {\n  className: \"w3-button w3-green\",\n  style: {\n    \"height\": \"40px\"\n  },\n  type: \"submit\",\n  id: \"inner\"\n}, \"댓글쓰기\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(_Transition, {\n    duration: \"550\",\n    name: \"nested\"\n  }, {\n    default: _withCtx(() => [$data.show ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, [_createTextVNode(\"전체 댓글 \"), _createElementVNode(\"a\", _hoisted_4, _toDisplayString($data.list.length), 1 /* TEXT */), _createTextVNode(\"개\")])]), _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, (row, idx) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: idx,\n        style: {\n          \"border-bottom\": \"1px solid #D9D9D9\"\n        },\n        id: \"inner\"\n      }, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString(row.user_name), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(row.comment), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"form\", {\n      onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.fnSave && $options.fnSave(...args), [\"prevent\"]))\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      ref: \"commentInput\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.comment = $event),\n      placeholder: \"댓글을 남겨주세요.\",\n      style: {\n        \"width\": \"550px\",\n        \"height\": \"40px\",\n        \"outline\": \"none\",\n        \"border\": \"0 solid black\"\n      },\n      type: \"text\",\n      id: \"inner\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.comment]]), _createTextVNode(\"  \"), _hoisted_9], 32 /* HYDRATE_EVENTS */)]), _hoisted_10])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","id","style","className","_createElementVNode","type","_createBlock","_Transition","duration","name","$data","show","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","list","length","_hoisted_5","_Fragment","_renderList","row","idx","key","_hoisted_6","user_name","comment","_hoisted_7","_hoisted_8","onSubmit","_cache","_withModifiers","args","$options","fnSave","ref","$event","placeholder","_hoisted_9","_hoisted_10"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardComment.vue"],"sourcesContent":["<template>\r\n  <Transition duration=\"550\" name=\"nested\">\r\n  <div class=\"board-list\" v-if=\"show\" id=\"outer\">\r\n    <div style=\"border-bottom: 2px solid #92D050; height: 50px;\">\r\n      <p style=\"float:left; padding: 0 10px 0\" id=\"inner\">전체 댓글 <a style=\"color: dodgerblue;\">{{ list.length }}</a>개</p>\r\n    </div>\r\n\r\n    <ul className=\"w3-ul\">\r\n      <li v-for=\"(row, idx) in list\" :key=\"idx\" style=\"border-bottom: 1px solid #D9D9D9\" id=\"inner\">\r\n        <div style=\"float: left; width: 150px;\">{{ row.user_name }}</div>\r\n        <div>{{ row.comment }}</div>\r\n      </li>\r\n    </ul>\r\n    <br>\r\n\r\n    <div style=\"text-align: center; border: solid 2px #E9E5E1; width: 700px; padding: 10px; margin: auto\" >\r\n      <form v-on:submit.prevent=\"fnSave\">\r\n        <input ref=\"commentInput\" v-model=\"comment\" placeholder=\"댓글을 남겨주세요.\"\r\n               style=\"width: 550px; height: 40px; outline: none; border: 0 solid black\"\r\n               type=\"text\" id=\"inner\">&nbsp;\r\n        <button className=\"w3-button w3-green\" style=\"height: 40px\" type=\"submit\" id=\"inner\">댓글쓰기</button>\r\n      </form>\r\n    </div><br>\r\n  </div>\r\n  </Transition>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: {}, //리스트 페이지 데이터전송\r\n      list: {}, //리스트 데이터\r\n      no: '', //게시판 숫자처리\r\n      idx: this.$route.query.idx,\r\n\r\n      user_name: '',\r\n      comment: '',\r\n      board: '',\r\n      show: false\r\n    }\r\n  },\r\n  mounted() {\r\n    this.show = true;\r\n    this.fnGetList()\r\n  },\r\n  methods: {\r\n    fnGetList() {\r\n      this.requestBody = { // 데이터 전송\r\n        keyword: this.keyword,\r\n        page: this.page,\r\n        size: this.size\r\n      }\r\n\r\n      this.$axios.get(this.$serverUrl + \"/comment/list\", {\r\n        params: this.requestBody,\r\n        headers: {}\r\n      }).then((res) => {\r\n        this.list = res.data.filter((board) => board.board == this.idx)  //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\r\n      }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    },\r\n    fnSave() {\r\n\r\n      if (!this.comment) {\r\n        alert('댓글을 입력해주세요.')\r\n        this.$refs.commentInput.focus()\r\n        return\r\n      }\r\n\r\n      let apiUrl = this.$serverUrl + '/comment'\r\n      this.user_name = prompt(\"이름을 입력해주세요.\");\r\n      this.form = {\r\n        \"user_name\": this.user_name,\r\n        \"comment\": this.comment,\r\n        \"board\": this.idx\r\n      }\r\n\r\n      if (!this.user_name) {\r\n        alert('이름을 입력해주세요.')\r\n        return\r\n      }\r\n\r\n      //INSERT\r\n      this.$axios.post(apiUrl, this.form)\r\n          .then(() => {\r\n            alert('댓글이 저장되었습니다.')\r\n            window.location.reload()\r\n          })\r\n          .catch((err) => {\r\n            if (err.message.indexOf('Network Error') > -1) {\r\n              alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n            }\r\n          })\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.nested-enter-active, .nested-leave-active {\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n/* delay leave of parent element */\r\n.nested-leave-active {\r\n  transition-delay: 0.25s;\r\n}\r\n\r\n.nested-enter-from,\r\n.nested-leave-to {\r\n  transform: translateY(30px);\r\n  opacity: 0;\r\n}\r\n\r\n/* we can also transition nested elements using nested selectors */\r\n.nested-enter-active #inner,\r\n.nested-leave-active #inner {\r\n  transition: all 0.3s ease-in-out;\r\n}\r\n/* delay enter of nested element */\r\n.nested-enter-active #inner {\r\n  transition-delay: 0.25s;\r\n}\r\n\r\n.nested-enter-from #inner,\r\n.nested-leave-to #inner {\r\n  transform: translateX(30px);\r\n  opacity: 0.001;\r\n}\r\n</style>"],"mappings":";;;EAEOA,KAAK,EAAC,YAAY;EAAaC,EAAE,EAAC;;;EAChCC,KAAuD,EAAvD;IAAA;IAAA;EAAA;AAAuD;;EACvDA,KAAqC,EAArC;IAAA;IAAA;EAAA,CAAqC;EAACD,EAAE,EAAC;;;EAAiBC,KAA0B,EAA1B;IAAA;EAAA;AAA0B;;EAGrFC,SAAS,EAAC;AAAO;;EAEZD,KAAkC,EAAlC;IAAA;IAAA;EAAA;AAAkC;gCAI3CE,mBAAA,CAAI;;EAECF,KAAgG,EAAhG;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAgG;gCAKjGE,mBAAA,CAAkG;EAA1FD,SAAS,EAAC,oBAAoB;EAACD,KAAoB,EAApB;IAAA;EAAA,CAAoB;EAACG,IAAI,EAAC,QAAQ;EAACJ,EAAE,EAAC;GAAQ,MAAI;iCAEvFG,mBAAA,CAAI;;;uBArBZE,YAAA,CAuBaC,WAAA;IAvBDC,QAAQ,EAAC,KAAK;IAACC,IAAI,EAAC;;sBAChC,MAqBM,CArBwBC,KAAA,CAAAC,IAAI,I,cAAlCC,mBAAA,CAqBM,OArBNC,UAqBM,GApBJT,mBAAA,CAEM,OAFNU,UAEM,GADJV,mBAAA,CAAkH,KAAlHW,UAAkH,G,iBAA9D,QAAM,GAAAX,mBAAA,CAAmD,KAAnDY,UAAmD,EAAAC,gBAAA,CAAlBP,KAAA,CAAAQ,IAAI,CAACC,MAAM,kB,iBAAO,GAAC,E,KAGhHf,mBAAA,CAKK,MALLgB,UAKK,I,kBAJHR,mBAAA,CAGKS,SAAA,QAAAC,WAAA,CAHoBZ,KAAA,CAAAQ,IAAI,GAAjBK,GAAG,EAAEC,GAAG;2BAApBZ,mBAAA,CAGK;QAH2Ba,GAAG,EAAED,GAAG;QAAEtB,KAAwC,EAAxC;UAAA;QAAA,CAAwC;QAACD,EAAE,EAAC;UACpFG,mBAAA,CAAiE,OAAjEsB,UAAiE,EAAAT,gBAAA,CAAtBM,GAAG,CAACI,SAAS,kBACxDvB,mBAAA,CAA4B,aAAAa,gBAAA,CAApBM,GAAG,CAACK,OAAO,iB;sCAGvBC,UAAI,EAEJzB,mBAAA,CAOM,OAPN0B,UAOM,GANJ1B,mBAAA,CAKO;MALI2B,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;wBAC/B9B,mBAAA,CAE8B;MAFvBiC,GAAG,EAAC,cAAc;iEAAU3B,KAAA,CAAAkB,OAAO,GAAAU,MAAA;MAAEC,WAAW,EAAC,YAAY;MAC7DrC,KAAwE,EAAxE;QAAA;QAAA;QAAA;QAAA;MAAA,CAAwE;MACxEG,IAAI,EAAC,MAAM;MAACJ,EAAE,EAAC;mDAFaS,KAAA,CAAAkB,OAAO,E,oBAEZ,IAC9B,GAAAY,UAAkG,C,8BAEhGC,WAAI,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}