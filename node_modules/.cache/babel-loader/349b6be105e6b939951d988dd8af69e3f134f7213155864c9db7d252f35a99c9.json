{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelText as _vModelText, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  className: \"board-list\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"border-bottom\": \"2px solid #92D050\",\n    \"height\": \"50px\"\n  }\n};\nconst _hoisted_3 = {\n  style: {\n    \"float\": \"left\",\n    \"padding\": \"0 10px 0\"\n  }\n};\nconst _hoisted_4 = {\n  style: {\n    \"color\": \"dodgerblue\"\n  }\n};\nconst _hoisted_5 = {\n  className: \"w3-ul\"\n};\nconst _hoisted_6 = {\n  style: {\n    \"float\": \"left\",\n    \"width\": \"150px\"\n  }\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = {\n  style: {\n    \"text-align\": \"center\",\n    \"border\": \"solid 2px #E9E5E1\",\n    \"width\": \"700px\",\n    \"padding\": \"10px\",\n    \"margin\": \"auto\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, [_createTextVNode(\"전체 댓글 \"), _createElementVNode(\"a\", _hoisted_4, _toDisplayString(_ctx.row.length), 1 /* TEXT */), _createTextVNode(\"개\")])]), _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, (row, idx) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: idx,\n      style: {\n        \"border-bottom\": \"1px solid #D9D9D9\"\n      }\n    }, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString(row.user_name), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(row.com), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _hoisted_7, _createElementVNode(\"div\", _hoisted_8, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    style: {\n      \"width\": \"550px\",\n      \"height\": \"40px\",\n      \"outline\": \"none\",\n      \"border\": \"0 solid black\"\n    },\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newComment = $event),\n    placeholder: \"댓글을 남겨주세요.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newComment]]), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    className: \"w3-button w3-green\",\n    onClick: _cache[1] || (_cache[1] = (...args) => _ctx.fnWrite && _ctx.fnWrite(...args)),\n    style: {\n      \"height\": \"40px\"\n    }\n  }, \"댓글쓰기\")])]);\n}","map":{"version":3,"names":["className","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_toDisplayString","_ctx","row","length","_hoisted_5","_Fragment","_renderList","$data","list","idx","key","_hoisted_6","user_name","com","_hoisted_7","_hoisted_8","type","newComment","$event","placeholder","onClick","_cache","args","fnWrite"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardComment.vue"],"sourcesContent":["\r\n<template>\r\n  <div className=\"board-list\">\r\n    <div style=\"border-bottom: 2px solid #92D050; height: 50px;\">\r\n      <p style=\"float:left; padding: 0 10px 0\">전체 댓글 <a style=\"color: dodgerblue;\">{{ row.length }}</a>개</p>\r\n    </div>\r\n\r\n    <ul className=\"w3-ul\">\r\n      <li v-for=\"(row, idx) in list\" :key=\"idx\" style=\"border-bottom: 1px solid #D9D9D9\">\r\n        <div style=\"float: left; width: 150px;\">{{ row.user_name }}</div>\r\n        <div>{{ row.com }}</div>\r\n      </li>\r\n    </ul>\r\n    <br>\r\n\r\n    <div style=\"text-align: center; border: solid 2px #E9E5E1; width: 700px; padding: 10px; margin: auto\">\r\n      <input type=\"text\" style=\"width: 550px; height: 40px; outline: none; border: 0 solid black\" v-model=\"newComment\"\r\n             placeholder=\"댓글을 남겨주세요.\">&nbsp;\r\n      <button type=\"button\" className=\"w3-button w3-green\" v-on:click=\"fnWrite\" style=\"height: 40px\">댓글쓰기</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: {}, //리스트 페이지 데이터전송\r\n      list: {}, //리스트 데이터\r\n      no: '', //게시판 숫자처리\r\n      paging: {\r\n        block: 0,\r\n        end_page: 0,\r\n        next_block: 0,\r\n        page: 0,\r\n        page_size: 0,\r\n        prev_block: 0,\r\n        start_index: 0,\r\n        start_page: 0,\r\n        total_block_cnt: 0,\r\n        total_list_cnt: 0,\r\n        total_page_cnt: 0,\r\n      }, //페이징 데이터\r\n      page: this.$route.query.page ? this.$route.query.page : 1,\r\n      size: this.$route.query.size ? this.$route.query.size : 10,\r\n      keyword: this.$route.query.keyword,\r\n      paginavigation: function () { //페이징 처리 for문 커스텀\r\n        let pageNumber = [] //;\r\n        let start_page = this.paging.start_page;\r\n        let end_page = this.paging.end_page;\r\n        for (let i = start_page; i <= end_page; i++) pageNumber.push(i);\r\n        return pageNumber;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetList()\r\n  },\r\n  methods: {\r\n    fnGetList() {\r\n      this.requestBody = { // 데이터 전송\r\n        keyword: this.keyword,\r\n        page: this.page,\r\n        size: this.size\r\n      }\r\n\r\n      this.$axios.get(this.$serverUrl + \"/comment/list\", {\r\n        params: this.requestBody,\r\n        headers: {}\r\n      }).then((res) => {\r\n\r\n        this.list = res.data  //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\r\n\r\n      }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;EAEOA,SAAS,EAAC;AAAY;;EACpBC,KAAuD,EAAvD;IAAA;IAAA;EAAA;AAAuD;;EACvDA,KAAqC,EAArC;IAAA;IAAA;EAAA;AAAqC;;EAAUA,KAA0B,EAA1B;IAAA;EAAA;AAA0B;;EAG1ED,SAAS,EAAC;AAAO;;EAEZC,KAAkC,EAAlC;IAAA;IAAA;EAAA;AAAkC;gCAI3CC,mBAAA,CAAI;;EAECD,KAAgG,EAAhG;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAAgG;;uBAbvGE,mBAAA,CAkBM,OAlBNC,UAkBM,GAjBJF,mBAAA,CAEM,OAFNG,UAEM,GADJH,mBAAA,CAAsG,KAAtGI,UAAsG,G,iBAA7D,QAAM,GAAAJ,mBAAA,CAAkD,KAAlDK,UAAkD,EAAAC,gBAAA,CAAjBC,IAAA,CAAAC,GAAG,CAACC,MAAM,kB,iBAAO,GAAC,E,KAGpGT,mBAAA,CAKK,MALLU,UAKK,I,kBAJHT,mBAAA,CAGKU,SAAA,QAAAC,WAAA,CAHoBC,KAAA,CAAAC,IAAI,GAAjBN,GAAG,EAAEO,GAAG;yBAApBd,mBAAA,CAGK;MAH2Be,GAAG,EAAED,GAAG;MAAEhB,KAAwC,EAAxC;QAAA;MAAA;QACxCC,mBAAA,CAAiE,OAAjEiB,UAAiE,EAAAX,gBAAA,CAAtBE,GAAG,CAACU,SAAS,kBACxDlB,mBAAA,CAAwB,aAAAM,gBAAA,CAAhBE,GAAG,CAACW,GAAG,iB;oCAGnBC,UAAI,EAEJpB,mBAAA,CAIM,OAJNqB,UAIM,G,gBAHJrB,mBAAA,CACgC;IADzBsB,IAAI,EAAC,MAAM;IAACvB,KAAwE,EAAxE;MAAA;MAAA;MAAA;MAAA;IAAA,CAAwE;+DAAUQ,IAAA,CAAAgB,UAAU,GAAAC,MAAA;IACxGC,WAAW,EAAC;iDADkFlB,IAAA,CAAAgB,UAAU,E,oBAC/E,IAChC,GAAAvB,mBAAA,CAA4G;IAApGsB,IAAI,EAAC,QAAQ;IAACxB,SAAS,EAAC,oBAAoB;IAAM4B,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAErB,IAAA,CAAAsB,OAAA,IAAAtB,IAAA,CAAAsB,OAAA,IAAAD,IAAA,CAAO;IAAE7B,KAAoB,EAApB;MAAA;IAAA;KAAqB,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}