{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    //변수생성\n    return {\n      requestBody: {},\n      //리스트 페이지 데이터전송\n      list: {},\n      //리스트 데이터\n      no: '',\n      //게시판 숫자처리\n      paging: {\n        block: 0,\n        end_page: 0,\n        next_block: 0,\n        page: 0,\n        page_size: 0,\n        prev_block: 0,\n        start_index: 0,\n        start_page: 0,\n        total_block_cnt: 0,\n        total_list_cnt: 0,\n        total_page_cnt: 0\n      },\n      //페이징 데이터\n      page: this.$route.query.page ? this.$route.query.page : 1,\n      size: this.$route.query.size ? this.$route.query.size : 10,\n      keyword: this.$route.query.keyword,\n      paginavigation: function () {\n        //페이징 처리 for문 커스텀\n        let pageNumber = []; //;\n        let start_page = this.paging.start_page;\n        let end_page = this.paging.end_page;\n        for (let i = start_page; i <= end_page; i++) pageNumber.push(i);\n        return pageNumber;\n      }\n    };\n  },\n  mounted() {\n    this.fnGetList();\n  },\n  methods: {\n    fnGetList() {\n      this.requestBody = {\n        // 데이터 전송\n        keyword: this.keyword,\n        page: this.page,\n        size: this.size\n      };\n      this.$axios.get(this.$serverUrl + \"/comment/list\", {\n        params: this.requestBody,\n        headers: {}\n      }).then(res => {\n        if (this.idx === res.data.board) this.list = res.data; //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\n      }).catch(err => {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","requestBody","list","no","paging","block","end_page","next_block","page","page_size","prev_block","start_index","start_page","total_block_cnt","total_list_cnt","total_page_cnt","$route","query","size","keyword","paginavigation","pageNumber","i","push","mounted","fnGetList","methods","$axios","get","$serverUrl","params","headers","then","res","idx","board","catch","err","message","indexOf","alert"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardComment.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-list\">\r\n    <div style=\"border-bottom: 2px solid #92D050; height: 50px;\">\r\n      <p style=\"float:left; padding: 0 10px 0\">전체 댓글 <a style=\"color: dodgerblue;\">{{ list.length }}</a>개</p>\r\n    </div>\r\n\r\n    <ul className=\"w3-ul\">\r\n      <li v-for=\"(row, idx) in list\" :key=\"idx\" style=\"border-bottom: 1px solid #D9D9D9\">\r\n        <div style=\"float: left; width: 150px;\">{{ row.user_name }}</div>\r\n        <div>{{ row.comment }}</div>\r\n      </li>\r\n    </ul>\r\n    <br>\r\n  </div>\r\n\r\n  <div style=\"text-align: center; border: solid 2px #E9E5E1; width: 700px; padding: 10px; margin: auto\">\r\n    <input type=\"text\" style=\"width: 550px; height: 40px; outline: none; border: 0 solid black\" v-model=\"newComment\"\r\n           placeholder=\"댓글을 남겨주세요.\">&nbsp;\r\n    <button type=\"button\" className=\"w3-button w3-green\" v-on:click=\"temp\" style=\"height: 40px\">댓글쓰기</button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: {}, //리스트 페이지 데이터전송\r\n      list: {}, //리스트 데이터\r\n      no: '', //게시판 숫자처리\r\n      paging: {\r\n        block: 0,\r\n        end_page: 0,\r\n        next_block: 0,\r\n        page: 0,\r\n        page_size: 0,\r\n        prev_block: 0,\r\n        start_index: 0,\r\n        start_page: 0,\r\n        total_block_cnt: 0,\r\n        total_list_cnt: 0,\r\n        total_page_cnt: 0,\r\n      }, //페이징 데이터\r\n      page: this.$route.query.page ? this.$route.query.page : 1,\r\n      size: this.$route.query.size ? this.$route.query.size : 10,\r\n      keyword: this.$route.query.keyword,\r\n      paginavigation: function () { //페이징 처리 for문 커스텀\r\n        let pageNumber = [] //;\r\n        let start_page = this.paging.start_page;\r\n        let end_page = this.paging.end_page;\r\n        for (let i = start_page; i <= end_page; i++) pageNumber.push(i);\r\n        return pageNumber;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetList()\r\n  },\r\n  methods: {\r\n    fnGetList() {\r\n      this.requestBody = { // 데이터 전송\r\n        keyword: this.keyword,\r\n        page: this.page,\r\n        size: this.size\r\n      }\r\n\r\n      this.$axios.get(this.$serverUrl + \"/comment/list\", {\r\n        params: this.requestBody,\r\n        headers: {}\r\n      }).then((res) => {\r\n        if( this.idx === res.data.board)\r\n        this.list = res.data  //서버에서 데이터를 목록으로 보내므로 바로 할당하여 사용할 수 있다.\r\n\r\n      }).catch((err) => {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";AAuBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IAAE;IACP,OAAO;MACLC,WAAW,EAAE,CAAC,CAAC;MAAE;MACjBC,IAAI,EAAE,CAAC,CAAC;MAAE;MACVC,EAAE,EAAE,EAAE;MAAE;MACRC,MAAM,EAAE;QACNC,KAAK,EAAE,CAAC;QACRC,QAAQ,EAAE,CAAC;QACXC,UAAU,EAAE,CAAC;QACbC,IAAI,EAAE,CAAC;QACPC,SAAS,EAAE,CAAC;QACZC,UAAU,EAAE,CAAC;QACbC,WAAW,EAAE,CAAC;QACdC,UAAU,EAAE,CAAC;QACbC,eAAe,EAAE,CAAC;QAClBC,cAAc,EAAE,CAAC;QACjBC,cAAc,EAAE;MAClB,CAAC;MAAE;MACHP,IAAI,EAAE,IAAI,CAACQ,MAAM,CAACC,KAAK,CAACT,IAAG,GAAI,IAAI,CAACQ,MAAM,CAACC,KAAK,CAACT,IAAG,GAAI,CAAC;MACzDU,IAAI,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,IAAG,GAAI,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,IAAG,GAAI,EAAE;MAC1DC,OAAO,EAAE,IAAI,CAACH,MAAM,CAACC,KAAK,CAACE,OAAO;MAClCC,cAAc,EAAE,SAAAA,CAAA,EAAY;QAAE;QAC5B,IAAIC,UAAS,GAAI,EAAC,EAAE;QACpB,IAAIT,UAAS,GAAI,IAAI,CAACR,MAAM,CAACQ,UAAU;QACvC,IAAIN,QAAO,GAAI,IAAI,CAACF,MAAM,CAACE,QAAQ;QACnC,KAAK,IAAIgB,CAAA,GAAIV,UAAU,EAAEU,CAAA,IAAKhB,QAAQ,EAAEgB,CAAC,EAAE,EAAED,UAAU,CAACE,IAAI,CAACD,CAAC,CAAC;QAC/D,OAAOD,UAAU;MACnB;IACF;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,EAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACPD,SAASA,CAAA,EAAG;MACV,IAAI,CAACxB,WAAU,GAAI;QAAE;QACnBkB,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBX,IAAI,EAAE,IAAI,CAACA,IAAI;QACfU,IAAI,EAAE,IAAI,CAACA;MACb;MAEA,IAAI,CAACS,MAAM,CAACC,GAAG,CAAC,IAAI,CAACC,UAAS,GAAI,eAAe,EAAE;QACjDC,MAAM,EAAE,IAAI,CAAC7B,WAAW;QACxB8B,OAAO,EAAE,CAAC;MACZ,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;QACf,IAAI,IAAI,CAACC,GAAE,KAAMD,GAAG,CAACjC,IAAI,CAACmC,KAAK,EAC/B,IAAI,CAACjC,IAAG,GAAI+B,GAAG,CAACjC,IAAG,EAAG;MAExB,CAAC,CAAC,CAACoC,KAAK,CAAEC,GAAG,IAAK;QAChB,IAAIA,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE;UAC7CC,KAAK,CAAC,mCAAmC;QAC3C;MACF,CAAC;IACH;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}