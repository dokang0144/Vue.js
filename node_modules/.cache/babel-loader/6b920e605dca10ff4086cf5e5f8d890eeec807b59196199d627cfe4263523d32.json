{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"board-detail\"\n};\nconst _hoisted_2 = {\n  class: \"common-buttons\"\n};\nconst _hoisted_3 = {\n  class: \"board-contents\"\n};\nconst _hoisted_4 = {\n  class: \"board-contents\"\n};\nconst _hoisted_5 = {\n  class: \"common-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-blue-gray\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fnSave && $options.fnSave(...args))\n  }, \"저장\"), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-gray\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.fnList && $options.fnList(...args))\n  }, \"목록\")]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.title = $event),\n    class: \"w3-input w3-border\",\n    placeholder: \"제목을 입력해주세요.\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]]), $data.idx === undefined ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.author = $event),\n    class: \"w3-input w3-border\",\n    placeholder: \"작성자를 입력해주세요.\"\n  }, null, 512 /* NEED_PATCH */)), [[_vModelText, $data.author]]) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"textarea\", {\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.contents = $event),\n    class: \"w3-input w3-border\",\n    style: {\n      \"resize\": \"none\"\n    }\n  }, \"\\r\\n      \", 512 /* NEED_PATCH */), [[_vModelText, $data.contents]])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-blue-gray\",\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.fnSave && $options.fnSave(...args))\n  }, \"저장\"), _createTextVNode(\"  \"), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-gray\",\n    onClick: _cache[6] || (_cache[6] = (...args) => $options.fnList && $options.fnList(...args))\n  }, \"목록\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","type","onClick","_cache","args","$options","fnSave","fnList","_hoisted_3","$data","title","$event","placeholder","idx","undefined","author","_hoisted_4","id","cols","rows","contents","style","_hoisted_5"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardWrite.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-detail\">\r\n    <div class=\"common-buttons\">\r\n      <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnSave\">저장</button>&nbsp;\r\n      <button type=\"button\" class=\"w3-button w3-round w3-gray\" v-on:click=\"fnList\">목록</button>\r\n    </div>\r\n    <div class=\"board-contents\">\r\n      <input type=\"text\" v-model=\"title\" class=\"w3-input w3-border\" placeholder=\"제목을 입력해주세요.\">\r\n      <input type=\"text\" v-model=\"author\" class=\"w3-input w3-border\" placeholder=\"작성자를 입력해주세요.\" v-if=\"idx === undefined\">\r\n    </div>\r\n    <div class=\"board-contents\">\r\n      <textarea id=\"\" cols=\"30\" rows=\"10\" v-model=\"contents\" class=\"w3-input w3-border\" style=\"resize: none;\">\r\n      </textarea>\r\n    </div>\r\n    <div class=\"common-buttons\">\r\n      <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnSave\">저장</button>&nbsp;\r\n      <button type=\"button\" class=\"w3-button w3-round w3-gray\" v-on:click=\"fnList\">목록</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: this.$route.query,\r\n      idx: this.$route.query.idx,\r\n\r\n      title: '',\r\n      author: '',\r\n      contents: '',\r\n      created_at: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetView()\r\n  },\r\n  methods: {\r\n    fnGetView() {\r\n      if (this.idx !== undefined) {\r\n        this.$axios.get(this.$serverUrl + '/board/' + this.idx, {\r\n          params: this.requestBody\r\n        }).then((res) => {\r\n          this.title = res.data.title\r\n          this.author = res.data.author\r\n          this.contents = res.data.contents\r\n          this.created_at = res.data.created_at\r\n        }).catch((err) => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    },\r\n    fnList() {\r\n      delete this.requestBody.idx\r\n      this.$router.push({\r\n        path: './list',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnView(idx) {\r\n      this.requestBody.idx = idx\r\n      this.$router.push({\r\n        path: './detail',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnSave() {\r\n      let apiUrl = this.$serverUrl + '/board'\r\n      this.form = {\r\n        \"idx\": this.idx,\r\n        \"title\": this.title,\r\n        \"contents\": this.contents,\r\n        \"author\": this.author\r\n      }\r\n\r\n      if (!this.title) {\r\n        alert('댓글을 입력해주세요.')\r\n        this.$refs.titleInput.focus()\r\n        return\r\n      }\r\n\r\n      if (this.idx === undefined) {\r\n        //INSERT\r\n        this.$axios.post(apiUrl, this.form)\r\n            .then((res) => {\r\n              alert('글이 저장되었습니다.')\r\n              this.fnView(res.data.idx)\r\n            }).catch((err) => {\r\n          if (err.message.indexOf('Network Error') > -1) {\r\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n          }\r\n        })\r\n      } else {\r\n        //UPDATE\r\n        this.$axios.patch(apiUrl, this.form)\r\n            .then((res) => {\r\n              alert('글이 저장되었습니다.')\r\n              this.fnView(res.data.idx)\r\n            }).catch((err) => {\r\n          if (err.message.indexOf('Network Error') > -1) {\r\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAgB;;EAItBA,KAAK,EAAC;AAAgB;;EAItBA,KAAK,EAAC;AAAgB;;EAItBA,KAAK,EAAC;AAAgB;;uBAb7BC,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,mBAAA,CAGM,OAHNC,UAGM,GAFJD,mBAAA,CAA6F;IAArFE,IAAI,EAAC,QAAQ;IAACL,KAAK,EAAC,iCAAiC;IAAMM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,IAAE,G,iBAAS,IAC7F,GAAAL,mBAAA,CAAwF;IAAhFE,IAAI,EAAC,QAAQ;IAACL,KAAK,EAAC,4BAA4B;IAAMM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,MAAA,IAAAF,QAAA,CAAAE,MAAA,IAAAH,IAAA,CAAM;KAAE,IAAE,E,GAEjFL,mBAAA,CAGM,OAHNS,UAGM,G,gBAFJT,mBAAA,CAAwF;IAAjFE,IAAI,EAAC,MAAM;+DAAUQ,KAAA,CAAAC,KAAK,GAAAC,MAAA;IAAEf,KAAK,EAAC,oBAAoB;IAACgB,WAAW,EAAC;iDAA9CH,KAAA,CAAAC,KAAK,E,GAC+DD,KAAA,CAAAI,GAAG,KAAKC,SAAS,G,+BAAjHjB,mBAAA,CAAmH;;IAA5GI,IAAI,EAAC,MAAM;+DAAUQ,KAAA,CAAAM,MAAM,GAAAJ,MAAA;IAAEf,KAAK,EAAC,oBAAoB;IAACgB,WAAW,EAAC;kDAA/CH,KAAA,CAAAM,MAAM,E,yCAEpChB,mBAAA,CAGM,OAHNiB,UAGM,G,gBAFJjB,mBAAA,CACW;IADDkB,EAAE,EAAC,EAAE;IAACC,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC,IAAI;+DAAUV,KAAA,CAAAW,QAAQ,GAAAT,MAAA;IAAEf,KAAK,EAAC,oBAAoB;IAACyB,KAAqB,EAArB;MAAA;IAAA;KAAsB,YACxG,0B,cAD6CZ,KAAA,CAAAW,QAAQ,E,KAGvDrB,mBAAA,CAGM,OAHNuB,UAGM,GAFJvB,mBAAA,CAA6F;IAArFE,IAAI,EAAC,QAAQ;IAACL,KAAK,EAAC,iCAAiC;IAAMM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,IAAE,G,iBAAS,IAC7F,GAAAL,mBAAA,CAAwF;IAAhFE,IAAI,EAAC,QAAQ;IAACL,KAAK,EAAC,4BAA4B;IAAMM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAE,MAAA,IAAAF,QAAA,CAAAE,MAAA,IAAAH,IAAA,CAAM;KAAE,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}