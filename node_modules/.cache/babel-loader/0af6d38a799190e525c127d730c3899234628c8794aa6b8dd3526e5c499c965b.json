{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport jwt_decode from 'jwt-decode';\nexport default {\n  data() {\n    //변수생성\n    return {\n      requestBody: this.$route.query,\n      idx: this.$route.query.idx,\n      title: '',\n      author: '',\n      contents: '',\n      created_at: ''\n    };\n  },\n  mounted() {\n    this.fnGetView();\n    const token = localStorage.getItem('jwt_token');\n    if (token) {\n      const decoded = jwt_decode(token);\n      this.author = decoded.user_name;\n    }\n\n    // idx 변수가 undefined일 때만 작성자 필드를 보여줌\n    if (this.idx === undefined) {\n      this.$refs.authorField.style.display = 'block';\n    }\n  },\n  methods: {\n    fnGetView() {\n      if (this.idx !== undefined) {\n        this.$axios.get(this.$serverUrl + '/board/' + this.idx, {\n          params: this.requestBody\n        }).then(res => {\n          this.title = res.data.title;\n          this.author = res.data.author;\n          this.contents = res.data.contents;\n          this.created_at = res.data.created_at;\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    },\n    fnList() {\n      delete this.requestBody.idx;\n      this.$router.push({\n        path: './list',\n        query: this.requestBody\n      });\n    },\n    fnView(idx) {\n      this.requestBody.idx = idx;\n      this.$router.push({\n        path: './detail',\n        query: this.requestBody\n      });\n    },\n    fnSave() {\n      let apiUrl = this.$serverUrl + '/board';\n      this.form = {\n        \"idx\": this.idx,\n        \"title\": this.title,\n        \"contents\": this.contents,\n        \"author\": this.author\n      };\n      if (!this.title) {\n        alert('제목을 입력해주세요.');\n        this.$refs.titleInput.focus();\n        return;\n      }\n      if (this.idx === undefined) {\n        //INSERT\n        this.$axios.post(apiUrl, this.form).then(res => {\n          alert('글이 저장되었습니다.');\n          this.fnView(res.data.idx);\n        }).catch(err => {\n          if (err.message.indexOf('Network Error') > -1) {\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n          }\n        });\n      } else {\n        //UPDATE\n        this.$axios.patch(apiUrl, this.form).then(res => {\n          alert('글이 저장되었습니다.');\n          this.fnView(res.data.idx);\n        }).catch(err => {\n          if (err.message.indexOf('Network Error') > -1) {\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["jwt_decode","data","requestBody","$route","query","idx","title","author","contents","created_at","mounted","fnGetView","token","localStorage","getItem","decoded","user_name","undefined","$refs","authorField","style","display","methods","$axios","get","$serverUrl","params","then","res","catch","err","console","log","fnList","$router","push","path","fnView","fnSave","apiUrl","form","alert","titleInput","focus","post","message","indexOf","patch"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardWrite.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-detail\">\r\n    <div class=\"common-buttons\">\r\n      <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnSave\">저장</button>&nbsp;\r\n      <button type=\"button\" class=\"w3-button w3-round w3-gray\" v-on:click=\"fnList\">목록</button>\r\n    </div>\r\n    <div class=\"board-contents\">\r\n      <input type=\"text\" ref=\"titleInput\" v-model=\"title\" class=\"w3-input w3-border\" placeholder=\"제목을 입력해주세요.\">\r\n      <input type=\"text\" v-model=\"author\" class=\"w3-input w3-border\" placeholder=\"작성자를 입력해주세요.\" v-if=\"idx === undefined\">\r\n    </div>\r\n    <div class=\"board-contents\">\r\n      <textarea id=\"\" cols=\"30\" rows=\"10\" v-model=\"contents\" class=\"w3-input w3-border\" style=\"resize: none;\">\r\n      </textarea>\r\n    </div>\r\n    <div class=\"common-buttons\">\r\n      <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnSave\">저장</button>&nbsp;\r\n      <button type=\"button\" class=\"w3-button w3-round w3-gray\" v-on:click=\"fnList\">목록</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div style=\"width: 100%; bottom: 0; position: absolute; height: 25%;\">\r\n    <hr/>\r\n    <footer>\r\n      여기는 footer 자리입니다.\r\n    </footer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: this.$route.query,\r\n      idx: this.$route.query.idx,\r\n\r\n      title: '',\r\n      author: '',\r\n      contents: '',\r\n      created_at: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetView()\r\n\r\n    const token = localStorage.getItem('jwt_token');\r\n    if (token) {\r\n      const decoded = jwt_decode(token);\r\n      this.author = decoded.user_name;\r\n    }\r\n\r\n    // idx 변수가 undefined일 때만 작성자 필드를 보여줌\r\n    if (this.idx === undefined) {\r\n      this.$refs.authorField.style.display = 'block';\r\n    }\r\n  },\r\n  methods: {\r\n    fnGetView() {\r\n      if (this.idx !== undefined) {\r\n        this.$axios.get(this.$serverUrl + '/board/' + this.idx, {\r\n          params: this.requestBody\r\n        }).then((res) => {\r\n          this.title = res.data.title\r\n          this.author = res.data.author\r\n          this.contents = res.data.contents\r\n          this.created_at = res.data.created_at\r\n        }).catch((err) => {\r\n          console.log(err)\r\n        })\r\n      }\r\n    },\r\n    fnList() {\r\n      delete this.requestBody.idx\r\n      this.$router.push({\r\n        path: './list',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnView(idx) {\r\n      this.requestBody.idx = idx\r\n      this.$router.push({\r\n        path: './detail',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnSave() {\r\n      let apiUrl = this.$serverUrl + '/board'\r\n      this.form = {\r\n        \"idx\": this.idx,\r\n        \"title\": this.title,\r\n        \"contents\": this.contents,\r\n        \"author\": this.author\r\n      }\r\n\r\n      if (!this.title) {\r\n        alert('제목을 입력해주세요.')\r\n        this.$refs.titleInput.focus()\r\n        return\r\n      }\r\n\r\n      if (this.idx === undefined) {\r\n        //INSERT\r\n        this.$axios.post(apiUrl, this.form)\r\n            .then((res) => {\r\n              alert('글이 저장되었습니다.')\r\n              this.fnView(res.data.idx)\r\n            }).catch((err) => {\r\n          if (err.message.indexOf('Network Error') > -1) {\r\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n          }\r\n        })\r\n      } else {\r\n        //UPDATE\r\n        this.$axios.patch(apiUrl, this.form)\r\n            .then((res) => {\r\n              alert('글이 저장되었습니다.')\r\n              this.fnView(res.data.idx)\r\n            }).catch((err) => {\r\n          if (err.message.indexOf('Network Error') > -1) {\r\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}