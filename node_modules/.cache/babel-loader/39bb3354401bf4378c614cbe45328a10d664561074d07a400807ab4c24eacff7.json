{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    //변수생성\n    return {\n      requestBody: this.$route.query,\n      idx: this.$route.query.idx,\n      user_id: '',\n      user_pw: ''\n    };\n  },\n  mounted() {\n    this.fnGetView();\n  },\n  methods: {\n    fnLogin() {\n      if (this.user_id === '') {\n        alert('ID를 입력하세요.');\n        return;\n      }\n      if (this.user_pw === '') {\n        alert('비밀번호를 입력하세요.');\n        return;\n      }\n    },\n    fnList() {\n      delete this.requestBody.idx;\n      this.$router.push({\n        path: './list',\n        query: this.requestBody\n      });\n    },\n    fnView(idx) {\n      this.requestBody.idx = idx;\n      this.$router.push({\n        path: './detail',\n        query: this.requestBody\n      });\n    },\n    fnSave() {\n      let apiUrl = this.$serverUrl + '/board';\n      this.form = {\n        \"idx\": this.idx,\n        \"title\": this.title,\n        \"contents\": this.contents,\n        \"author\": this.author\n      };\n      if (!this.title) {\n        alert('제목을 입력해주세요.');\n        this.$refs.titleInput.focus();\n        return;\n      }\n      if (this.idx === undefined) {\n        //INSERT\n        this.$axios.post(apiUrl, this.form).then(res => {\n          alert('글이 저장되었습니다.');\n          this.fnView(res.data.idx);\n        }).catch(err => {\n          if (err.message.indexOf('Network Error') > -1) {\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n          }\n        });\n      } else {\n        //UPDATE\n        this.$axios.patch(apiUrl, this.form).then(res => {\n          alert('글이 저장되었습니다.');\n          this.fnView(res.data.idx);\n        }).catch(err => {\n          if (err.message.indexOf('Network Error') > -1) {\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.');\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","requestBody","$route","query","idx","user_id","user_pw","mounted","fnGetView","methods","fnLogin","alert","fnList","$router","push","path","fnView","fnSave","apiUrl","$serverUrl","form","title","contents","author","$refs","titleInput","focus","undefined","$axios","post","then","res","catch","err","message","indexOf","patch"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\common\\PageSighUp.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <h2>Please Sign Up</h2>\r\n      <div id=\"loginForm\">\r\n        <form @submit.prevent=\"fnLogin\">\r\n          <p>\r\n            <input class=\"w3-input\" name=\"uid\" placeholder=\"Enter your ID\" v-model=\"user_id\"><br>\r\n          </p>\r\n          <p>\r\n            <input name=\"password\" class=\"w3-input\" placeholder=\"Enter your password\" v-model=\"user_pw\" type=\"password\">\r\n          </p>\r\n          <p>\r\n            <button type=\"submit\" class=\"w3-button w3-green w3-round\">Sign-Up</button>\r\n          </p>\r\n          <p><b><router-link to=\"/login\" style=\"color: #42b983\">이미 계정이 있으신가요?</router-link></b></p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: this.$route.query,\r\n      idx: this.$route.query.idx,\r\n\r\n      user_id: '',\r\n      user_pw: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetView()\r\n  },\r\n  methods: {\r\n    fnLogin() {\r\n      if (this.user_id === '') {\r\n        alert('ID를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if (this.user_pw === '') {\r\n        alert('비밀번호를 입력하세요.')\r\n        return\r\n      }\r\n    },\r\n    fnList() {\r\n      delete this.requestBody.idx\r\n      this.$router.push({\r\n        path: './list',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnView(idx) {\r\n      this.requestBody.idx = idx\r\n      this.$router.push({\r\n        path: './detail',\r\n        query: this.requestBody\r\n      })\r\n    },\r\n    fnSave() {\r\n      let apiUrl = this.$serverUrl + '/board'\r\n      this.form = {\r\n        \"idx\": this.idx,\r\n        \"title\": this.title,\r\n        \"contents\": this.contents,\r\n        \"author\": this.author\r\n      }\r\n\r\n      if (!this.title) {\r\n        alert('제목을 입력해주세요.')\r\n        this.$refs.titleInput.focus()\r\n        return\r\n      }\r\n\r\n      if (this.idx === undefined) {\r\n        //INSERT\r\n        this.$axios.post(apiUrl, this.form)\r\n            .then((res) => {\r\n              alert('글이 저장되었습니다.')\r\n              this.fnView(res.data.idx)\r\n            }).catch((err) => {\r\n          if (err.message.indexOf('Network Error') > -1) {\r\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n          }\r\n        })\r\n      } else {\r\n        //UPDATE\r\n        this.$axios.patch(apiUrl, this.form)\r\n            .then((res) => {\r\n              alert('글이 저장되었습니다.')\r\n              this.fnView(res.data.idx)\r\n            }).catch((err) => {\r\n          if (err.message.indexOf('Network Error') > -1) {\r\n            alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#loginForm {\r\n  width: 500px;\r\n  margin: auto;\r\n}\r\n</style>"],"mappings":";AAuBA,eAAe;EACbA,IAAIA,CAAA,EAAG;IAAE;IACP,OAAO;MACLC,WAAW,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK;MAC9BC,GAAG,EAAE,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,GAAG;MAE1BC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,EAAC;EACjB,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACL,OAAM,KAAM,EAAE,EAAE;QACvBM,KAAK,CAAC,YAAY;QAClB;MACF;MAEA,IAAI,IAAI,CAACL,OAAM,KAAM,EAAE,EAAE;QACvBK,KAAK,CAAC,cAAc;QACpB;MACF;IACF,CAAC;IACDC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACX,WAAW,CAACG,GAAE;MAC1B,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,QAAQ;QACdZ,KAAK,EAAE,IAAI,CAACF;MACd,CAAC;IACH,CAAC;IACDe,MAAMA,CAACZ,GAAG,EAAE;MACV,IAAI,CAACH,WAAW,CAACG,GAAE,GAAIA,GAAE;MACzB,IAAI,CAACS,OAAO,CAACC,IAAI,CAAC;QAChBC,IAAI,EAAE,UAAU;QAChBZ,KAAK,EAAE,IAAI,CAACF;MACd,CAAC;IACH,CAAC;IACDgB,MAAMA,CAAA,EAAG;MACP,IAAIC,MAAK,GAAI,IAAI,CAACC,UAAS,GAAI,QAAO;MACtC,IAAI,CAACC,IAAG,GAAI;QACV,KAAK,EAAE,IAAI,CAAChB,GAAG;QACf,OAAO,EAAE,IAAI,CAACiB,KAAK;QACnB,UAAU,EAAE,IAAI,CAACC,QAAQ;QACzB,QAAQ,EAAE,IAAI,CAACC;MACjB;MAEA,IAAI,CAAC,IAAI,CAACF,KAAK,EAAE;QACfV,KAAK,CAAC,aAAa;QACnB,IAAI,CAACa,KAAK,CAACC,UAAU,CAACC,KAAK,EAAC;QAC5B;MACF;MAEA,IAAI,IAAI,CAACtB,GAAE,KAAMuB,SAAS,EAAE;QAC1B;QACA,IAAI,CAACC,MAAM,CAACC,IAAI,CAACX,MAAM,EAAE,IAAI,CAACE,IAAI,EAC7BU,IAAI,CAAEC,GAAG,IAAK;UACbpB,KAAK,CAAC,aAAa;UACnB,IAAI,CAACK,MAAM,CAACe,GAAG,CAAC/B,IAAI,CAACI,GAAG;QAC1B,CAAC,CAAC,CAAC4B,KAAK,CAAEC,GAAG,IAAK;UACpB,IAAIA,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE;YAC7CxB,KAAK,CAAC,mCAAmC;UAC3C;QACF,CAAC;MACH,OAAO;QACL;QACA,IAAI,CAACiB,MAAM,CAACQ,KAAK,CAAClB,MAAM,EAAE,IAAI,CAACE,IAAI,EAC9BU,IAAI,CAAEC,GAAG,IAAK;UACbpB,KAAK,CAAC,aAAa;UACnB,IAAI,CAACK,MAAM,CAACe,GAAG,CAAC/B,IAAI,CAACI,GAAG;QAC1B,CAAC,CAAC,CAAC4B,KAAK,CAAEC,GAAG,IAAK;UACpB,IAAIA,GAAG,CAACC,OAAO,CAACC,OAAO,CAAC,eAAe,IAAI,CAAC,CAAC,EAAE;YAC7CxB,KAAK,CAAC,mCAAmC;UAC3C;QACF,CAAC;MACH;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}