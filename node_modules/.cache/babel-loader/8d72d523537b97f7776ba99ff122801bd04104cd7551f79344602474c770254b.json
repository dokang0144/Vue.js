{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"돌아오신 것을 환영해요!\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"color\": \"#a0a0a0\",\n    \"font-size\": \"18px\",\n    \"margin\": \"0\"\n  }\n}, \"다시 만나다니 너무 반가워요!\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  id: \"loginForm\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"p\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"w3-button w3-green w3-round\"\n}, \"Login\")], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_1, _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.fnLogin && $options.fnLogin(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    class: \"w3-input\",\n    name: \"uid\",\n    placeholder: \"아이디를 입력해주세요\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user_id = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user_id]]), _hoisted_4]), _createElementVNode(\"p\", null, [_withDirectives(_createElementVNode(\"input\", {\n    name: \"password\",\n    class: \"w3-input\",\n    placeholder: \"비밀번호를 입력해주세요\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user_pw = $event),\n    type: \"password\",\n    style: {}\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user_pw]])]), _hoisted_5, _createElementVNode(\"p\", null, [_createTextVNode(\"계정이 필요한가요? \"), _createElementVNode(\"b\", null, [_createVNode(_component_router_link, {\n    to: \"/signup\",\n    style: {\n      \"color\": \"#42b983\"\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"가입하기\")]),\n    _: 1 /* STABLE */\n  })])])], 32 /* HYDRATE_EVENTS */)])])]);\n}","map":{"version":3,"names":["_createElementVNode","style","id","type","class","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","onSubmit","_cache","_withModifiers","args","$options","fnLogin","name","placeholder","$data","user_id","$event","_hoisted_4","user_pw","_hoisted_5","_createVNode","_component_router_link","to"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\common\\PageLogin.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <h2>돌아오신 것을 환영해요!</h2>\r\n      <p style=\"color: #a0a0a0; font-size: 18px; margin: 0\">다시 만나다니 너무 반가워요!</p>\r\n      <div id=\"loginForm\">\r\n        <form @submit.prevent=\"fnLogin\">\r\n          <p>\r\n            <input class=\"w3-input\" name=\"uid\" placeholder=\"아이디를 입력해주세요\" v-model=\"user_id\"><br>\r\n          </p>\r\n          <p>\r\n            <input name=\"password\" class=\"w3-input\" placeholder=\"비밀번호를 입력해주세요\" v-model=\"user_pw\" type=\"password\" style=\"text-\">\r\n          </p>\r\n          <p>\r\n            <button type=\"submit\" class=\"w3-button w3-green w3-round\">Login</button>\r\n          </p>\r\n          <p>계정이 필요한가요? <b><router-link to=\"/signup\" style=\"color: #42b983\">가입하기</router-link></b></p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters} from 'vuex'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user_id: '',\r\n      user_pw: ''\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['login']),\r\n\r\n    async fnLogin() {\r\n      if (this.user_id === '') {\r\n        alert('ID를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      if (this.user_pw === '') {\r\n        alert('비밀번호를 입력하세요.')\r\n        return\r\n      }\r\n\r\n      try {\r\n        let loginResult = await this.login({user_id: this.user_id, user_pw: this.user_pw})\r\n        if (loginResult) this.goToPages()\r\n      } catch (err) {\r\n        if (err.message.indexOf('Network Error') > -1) {\r\n          alert('서버에 접속할 수 없습니다. 상태를 확인해주세요.')\r\n        } else {\r\n          alert('로그인 정보를 확인할 수 없습니다.')\r\n        }\r\n      }\r\n    },\r\n    goToPages() {\r\n      this.$router.push({\r\n        name: 'List'\r\n      })\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters({\r\n      errorState: 'getErrorState'\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n#loginForm {\r\n  width: 500px;\r\n  margin: auto;\r\n}\r\n</style>"],"mappings":";gCAGMA,mBAAA,CAAsB,YAAlB,eAAa;gCACjBA,mBAAA,CAA0E;EAAvEC,KAAkD,EAAlD;IAAA;IAAA;IAAA;EAAA;AAAkD,GAAC,kBAAgB;;EACjEC,EAAE,EAAC;AAAW;gCAGkEF,mBAAA,CAAI;gCAKrFA,mBAAA,CAEI,Y,aADFA,mBAAA,CAAwE;EAAhEG,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;GAA8B,OAAK,E;;;;uBAbzEC,mBAAA,CAmBM,cAlBJL,mBAAA,CAiBM,cAhBJM,UAAsB,EACtBC,UAA0E,EAC1EP,mBAAA,CAaM,OAbNQ,UAaM,GAZJR,mBAAA,CAWO;IAXAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;MAC5BZ,mBAAA,CAEI,Y,gBADFA,mBAAA,CAA+E;IAAxEI,KAAK,EAAC,UAAU;IAACW,IAAI,EAAC,KAAK;IAACC,WAAW,EAAC,aAAa;+DAAUC,KAAA,CAAAC,OAAO,GAAAC,MAAA;iDAAPF,KAAA,CAAAC,OAAO,E,GAAEE,UAAI,C,GAErFpB,mBAAA,CAEI,Y,gBADFA,mBAAA,CAAmH;IAA5Ge,IAAI,EAAC,UAAU;IAACX,KAAK,EAAC,UAAU;IAACY,WAAW,EAAC,cAAc;+DAAUC,KAAA,CAAAI,OAAO,GAAAF,MAAA;IAAEhB,IAAI,EAAC,UAAU;IAACF,KAAa,EAAb;iDAAzBgB,KAAA,CAAAI,OAAO,E,KAErFC,UAEI,EACJtB,mBAAA,CAA4F,Y,iBAAzF,aAAW,GAAAA,mBAAA,CAA0E,YAAvEuB,YAAA,CAAmEC,sBAAA;IAAtDC,EAAE,EAAC,SAAS;IAACxB,KAAsB,EAAtB;MAAA;IAAA;;sBAAuB,MAAI,C,iBAAJ,MAAI,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}