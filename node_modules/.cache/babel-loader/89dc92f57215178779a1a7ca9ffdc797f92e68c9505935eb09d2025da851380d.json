{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"board-list\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"p\", {\n  style: {\n    \"float\": \"left\",\n    \"padding\": \"0 10px\"\n  }\n}, [/*#__PURE__*/_createTextVNode(\"전체 댓글 \"), /*#__PURE__*/_createElementVNode(\"a\", {\n  style: {\n    \"color\": \"dodgerblue\"\n  }\n}, \"3\"), /*#__PURE__*/_createTextVNode(\"개\")])], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"border-bottom\": \"2px solid #42b983\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"w3-table-all\"\n};\nconst _hoisted_5 = {\n  class: \"common-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _createElementVNode(\"table\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.list, (row, idx) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: idx\n    }, [_createElementVNode(\"td\", null, _toDisplayString(row.idx), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.author), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.created_at), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"w3-button w3-round w3-blue-gray\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.fnWrite && _ctx.fnWrite(...args))\n  }, \"등록\")])]);\n}","map":{"version":3,"names":["class","_createElementVNode","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_Fragment","_renderList","$data","list","row","idx","key","_toDisplayString","title","author","created_at","_hoisted_5","type","onClick","_cache","args","_ctx","fnWrite"],"sources":["C:\\Users\\LENOVO\\Documents\\GitHub\\Vue.js\\src\\views\\board\\BoardComment.vue"],"sourcesContent":["<template>\r\n  <div class=\"board-list\">\r\n    <div>\r\n      <p style=\"float:left; padding: 0 10px\">전체 댓글 <a style=\"color: dodgerblue;\">3</a>개</p>\r\n    </div>\r\n    <div style=\"border-bottom: 2px solid #42b983;\"></div>\r\n\r\n    <table class=\"w3-table-all\">\r\n      <tr v-for=\"(row, idx) in list\" :key=\"idx\">\r\n        <td>{{ row.idx }}</td>\r\n        <td>{{ row.title }}</td>\r\n        <td>{{ row.author }}</td>\r\n        <td>{{ row.created_at }}</td>\r\n      </tr>\r\n    </table>\r\n    <div class=\"common-buttons\">\r\n      <button type=\"button\" class=\"w3-button w3-round w3-blue-gray\" v-on:click=\"fnWrite\">등록</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() { //변수생성\r\n    return {\r\n      requestBody: {}, //리스트 페이지 데이터전송\r\n      list: {}, //리스트 데이터\r\n      no: '', //게시판 숫자처리\r\n      paging: {\r\n        block: 0,\r\n        end_page: 0,\r\n        next_block: 0,\r\n        page: 0,\r\n        page_size: 0,\r\n        prev_block: 0,\r\n        start_index: 0,\r\n        start_page: 0,\r\n        total_block_cnt: 0,\r\n        total_list_cnt: 0,\r\n        total_page_cnt: 0,\r\n      }, //페이징 데이터\r\n      page: this.$route.query.page ? this.$route.query.page : 1,\r\n      size: this.$route.query.size ? this.$route.query.size : 10,\r\n      keyword: this.$route.query.keyword,\r\n      paginavigation: function () { //페이징 처리 for문 커스텀\r\n        let pageNumber = [] //;\r\n        let start_page = this.paging.start_page;\r\n        let end_page = this.paging.end_page;\r\n        for (let i = start_page; i <= end_page; i++) pageNumber.push(i);\r\n        return pageNumber;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fnGetList()\r\n  },\r\n  methods: {\r\n    fnGetList() {\r\n      this.list = [\r\n        {\r\n          \"idx\":1,\r\n          \"title\": \"제목1\",\r\n          \"author\": \"작성자1\",\r\n          \"created_at\": \"작성일시1\"\r\n        },\r\n        {\r\n          \"idx\":1,\r\n          \"title\": \"제목1\",\r\n          \"author\": \"작성자1\",\r\n          \"created_at\": \"작성일시1\"\r\n        },\r\n        {\r\n          \"idx\":1,\r\n          \"title\": \"제목1\",\r\n          \"author\": \"작성자1\",\r\n          \"created_at\": \"작성일시1\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAY;gCACrBC,mBAAA,CAEM,c,aADJA,mBAAA,CAAqF;EAAlFC,KAAmC,EAAnC;IAAA;IAAA;EAAA;AAAmC,I,8BAAC,QAAM,G,aAAAD,mBAAA,CAAmC;EAAhCC,KAA0B,EAA1B;IAAA;EAAA;AAA0B,GAAC,GAAC,G,8BAAI,GAAC,E;gCAEnFD,mBAAA,CAAqD;EAAhDC,KAAyC,EAAzC;IAAA;EAAA;AAAyC;;EAEvCF,KAAK,EAAC;AAAc;;EAQtBA,KAAK,EAAC;AAAgB;;uBAd7BG,mBAAA,CAiBM,OAjBNC,UAiBM,GAhBJC,UAEM,EACNC,UAAqD,EAErDL,mBAAA,CAOQ,SAPRM,UAOQ,I,kBANNJ,mBAAA,CAKKK,SAAA,QAAAC,WAAA,CALoBC,KAAA,CAAAC,IAAI,GAAjBC,GAAG,EAAEC,GAAG;yBAApBV,mBAAA,CAKK;MAL2BW,GAAG,EAAED;IAAG,IACtCZ,mBAAA,CAAsB,YAAAc,gBAAA,CAAfH,GAAG,CAACC,GAAG,kBACdZ,mBAAA,CAAwB,YAAAc,gBAAA,CAAjBH,GAAG,CAACI,KAAK,kBAChBf,mBAAA,CAAyB,YAAAc,gBAAA,CAAlBH,GAAG,CAACK,MAAM,kBACjBhB,mBAAA,CAA6B,YAAAc,gBAAA,CAAtBH,GAAG,CAACM,UAAU,iB;oCAGzBjB,mBAAA,CAEM,OAFNkB,UAEM,GADJlB,mBAAA,CAA8F;IAAtFmB,IAAI,EAAC,QAAQ;IAACpB,KAAK,EAAC,iCAAiC;IAAMqB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,OAAA,IAAAD,IAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}